// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render Button with custom children 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-start",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        },
        Object {
          "backgroundColor": "#fafafa",
        },
        Object {
          "alignSelf": "stretch",
        },
      ]
    }
    testID="button-root"
  >
    <Text
      testID="custom"
    >
      Custom
    </Text>
  </View>
</View>
`;

exports[`Button should render Button with default color styles 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-start",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        },
        Object {
          "backgroundColor": "#fafafa",
        },
      ]
    }
    testID="button-root"
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
            "textTransform": "uppercase",
          },
          Object {},
        ]
      }
    >
      Hello
    </Text>
  </View>
</View>
`;

exports[`Button should render Button with full width 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-start",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        },
        Object {
          "backgroundColor": "#fafafa",
        },
        Object {
          "alignSelf": "stretch",
        },
      ]
    }
    testID="button-root"
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
            "textTransform": "uppercase",
          },
          Object {},
        ]
      }
    >
      Hello
    </Text>
  </View>
</View>
`;

exports[`Button should render Button with link color styles 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-start",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        },
        Object {},
      ]
    }
    testID="button-root"
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
            "textTransform": "uppercase",
          },
          Object {},
        ]
      }
    >
      Hello
    </Text>
  </View>
</View>
`;

exports[`Button should render Button with primary color styles 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-start",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        },
        Object {
          "backgroundColor": "#3f51b5",
        },
      ]
    }
    testID="button-root"
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
            "textTransform": "uppercase",
          },
          Object {
            "color": "#fff",
          },
        ]
      }
    >
      Hello
    </Text>
  </View>
</View>
`;

exports[`Button should render Button with secondary color styles 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-start",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        },
        Object {
          "backgroundColor": "#f50057",
        },
      ]
    }
    testID="button-root"
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
            "textTransform": "uppercase",
          },
          Object {
            "color": "#fff",
          },
        ]
      }
    >
      Hello
    </Text>
  </View>
</View>
`;
