// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThemeContext should change theme based on callback function 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemePicker>
        <Picker
          mode="dialog"
          onValueChange={[Function]}
          selectedValue="bluebase-light"
          style={
            Object {
              "width": 150,
            }
          }
        >
          <PickerIOS
            mode="dialog"
            onValueChange={[Function]}
            selectedValue="bluebase-light"
            style={
              Object {
                "width": 150,
              }
            }
          >
            <View
              style={
                Object {
                  "width": 150,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": 150,
                  }
                }
              >
                <_class
                  items={
                    Array [
                      Object {
                        "label": "BlueBase Light",
                        "textColor": undefined,
                        "value": "bluebase-light",
                      },
                      Object {
                        "label": "BlueBase Dark",
                        "textColor": undefined,
                        "value": "bluebase-dark",
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "BlueBase Light",
                          "textColor": undefined,
                          "value": "bluebase-light",
                        },
                        Object {
                          "label": "BlueBase Dark",
                          "textColor": undefined,
                          "value": "bluebase-dark",
                        },
                      ]
                    }
                    onChange={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                  />
                </_class>
              </View>
            </View>
          </PickerIOS>
        </Picker>
      </ThemePicker>
      <ThemeDemo>
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "padding": 8,
            }
          }
        >
          <ThemedComponent
            style={
              Object {
                "backgroundColor": "#fafafa",
                "padding": 8,
              }
            }
          >
            <ThemedComponent
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "padding": 8,
                }
              }
            >
              <ThemedComponent
                style={
                  Object {
                    "backgroundColor": "#fafafa",
                    "padding": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#fafafa",
                      "padding": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#fafafa",
                        "padding": 8,
                      }
                    }
                  >
                    <Body1>
                      <ThemedComponent>
                        <Component
                          styles={
                            Object {
                              "root": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontWeight": "400",
                              },
                            }
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": undefined,
                                  "fontSize": 16,
                                  "fontWeight": "400",
                                },
                                undefined,
                              ]
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": undefined,
                                    "fontSize": 16,
                                    "fontWeight": "400",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              BlueBase Light
                            </Text>
                          </Text>
                        </Component>
                      </ThemedComponent>
                    </Body1>
                  </View>
                </View>
              </ThemedComponent>
            </ThemedComponent>
          </ThemedComponent>
        </View>
      </ThemeDemo>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`ThemeContext should change theme based on callback function 2`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemePicker>
        <Picker
          mode="dialog"
          onValueChange={[Function]}
          selectedValue="bluebase-dark"
          style={
            Object {
              "width": 150,
            }
          }
        >
          <PickerIOS
            mode="dialog"
            onValueChange={[Function]}
            selectedValue="bluebase-dark"
            style={
              Object {
                "width": 150,
              }
            }
          >
            <View
              style={
                Object {
                  "width": 150,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": 150,
                  }
                }
              >
                <_class
                  items={
                    Array [
                      Object {
                        "label": "BlueBase Light",
                        "textColor": undefined,
                        "value": "bluebase-light",
                      },
                      Object {
                        "label": "BlueBase Dark",
                        "textColor": undefined,
                        "value": "bluebase-dark",
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={1}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "BlueBase Light",
                          "textColor": undefined,
                          "value": "bluebase-light",
                        },
                        Object {
                          "label": "BlueBase Dark",
                          "textColor": undefined,
                          "value": "bluebase-dark",
                        },
                      ]
                    }
                    onChange={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    selectedIndex={1}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                  />
                </_class>
              </View>
            </View>
          </PickerIOS>
        </Picker>
      </ThemePicker>
      <ThemeDemo>
        <View
          style={
            Object {
              "backgroundColor": "#303030",
              "padding": 8,
            }
          }
        >
          <ThemedComponent
            style={
              Object {
                "backgroundColor": "#303030",
                "padding": 8,
              }
            }
          >
            <ThemedComponent
              style={
                Object {
                  "backgroundColor": "#303030",
                  "padding": 8,
                }
              }
            >
              <ThemedComponent
                style={
                  Object {
                    "backgroundColor": "#303030",
                    "padding": 8,
                  }
                }
              >
                <ThemedComponent
                  style={
                    Object {
                      "backgroundColor": "#303030",
                      "padding": 8,
                    }
                  }
                >
                  <ThemedComponent
                    style={
                      Object {
                        "backgroundColor": "#303030",
                        "padding": 8,
                      }
                    }
                  >
                    <ThemedComponent
                      style={
                        Object {
                          "backgroundColor": "#303030",
                          "padding": 8,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#303030",
                            "padding": 8,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#303030",
                              "padding": 8,
                            }
                          }
                        >
                          <Body1>
                            <ThemedComponent>
                              <ThemedComponent
                                styles={
                                  Object {
                                    "root": Object {
                                      "color": "#ffffff",
                                      "fontFamily": undefined,
                                      "fontSize": 16,
                                      "fontWeight": "400",
                                    },
                                  }
                                }
                              >
                                <Component
                                  styles={
                                    Object {
                                      "root": Object {
                                        "color": "#ffffff",
                                        "fontFamily": undefined,
                                        "fontSize": 16,
                                        "fontWeight": "400",
                                      },
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Array [
                                        Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    <Text
                                      style={
                                        Array [
                                          Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          undefined,
                                        ]
                                      }
                                    >
                                      BlueBase Dark
                                    </Text>
                                  </Text>
                                </Component>
                              </ThemedComponent>
                            </ThemedComponent>
                          </Body1>
                        </View>
                      </View>
                    </ThemedComponent>
                  </ThemedComponent>
                </ThemedComponent>
              </ThemedComponent>
            </ThemedComponent>
          </ThemedComponent>
        </View>
      </ThemeDemo>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`ThemeContext should override a theme 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemeProvider
        overrides={
          Object {
            "palette": Object {
              "background": Object {
                "default": "red",
              },
            },
          }
        }
        theme="bluebase-dark"
      >
        <ThemeDemo>
          <View
            style={
              Object {
                "backgroundColor": "red",
                "padding": 8,
              }
            }
          >
            <ThemedComponent
              style={
                Object {
                  "backgroundColor": "red",
                  "padding": 8,
                }
              }
            >
              <ThemedComponent
                style={
                  Object {
                    "backgroundColor": "red",
                    "padding": 8,
                  }
                }
              >
                <ThemedComponent
                  style={
                    Object {
                      "backgroundColor": "red",
                      "padding": 8,
                    }
                  }
                >
                  <ThemedComponent
                    style={
                      Object {
                        "backgroundColor": "red",
                        "padding": 8,
                      }
                    }
                  >
                    <ThemedComponent
                      style={
                        Object {
                          "backgroundColor": "red",
                          "padding": 8,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "red",
                            "padding": 8,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "red",
                              "padding": 8,
                            }
                          }
                        >
                          <Body1>
                            <ThemedComponent>
                              <Component
                                styles={
                                  Object {
                                    "root": Object {
                                      "color": "#ffffff",
                                      "fontFamily": undefined,
                                      "fontSize": 16,
                                      "fontWeight": "400",
                                    },
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#ffffff",
                                        "fontFamily": undefined,
                                        "fontSize": 16,
                                        "fontWeight": "400",
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      Array [
                                        Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    BlueBase Dark
                                  </Text>
                                </Text>
                              </Component>
                            </ThemedComponent>
                          </Body1>
                        </View>
                      </View>
                    </ThemedComponent>
                  </ThemedComponent>
                </ThemedComponent>
              </ThemedComponent>
            </ThemedComponent>
          </View>
        </ThemeDemo>
      </ThemeProvider>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`ThemeContext should render a ThemeDemo component with themed background color 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fafafa",
      "padding": 8,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": undefined,
          "fontSize": 16,
          "fontWeight": "400",
        },
        undefined,
      ]
    }
  >
    BlueBase Light
  </Text>
</View>
`;

exports[`ThemeContext should render a overwritten ThemeDemo component with red background color 1`] = `
<View
  style={
    Object {
      "backgroundColor": "red",
      "padding": 8,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#ffffff",
          "fontFamily": undefined,
          "fontSize": 16,
          "fontWeight": "400",
        },
        undefined,
      ]
    }
  >
    BlueBase Dark
  </Text>
</View>
`;

exports[`ThemeContext should throw an error when changing theme based to unknown theme 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemePicker>
        <Picker
          mode="dialog"
          onValueChange={[Function]}
          selectedValue="bluebase-light"
          style={
            Object {
              "width": 150,
            }
          }
        >
          <PickerIOS
            mode="dialog"
            onValueChange={[Function]}
            selectedValue="bluebase-light"
            style={
              Object {
                "width": 150,
              }
            }
          >
            <View
              style={
                Object {
                  "width": 150,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": 150,
                  }
                }
              >
                <_class
                  items={
                    Array [
                      Object {
                        "label": "BlueBase Light",
                        "textColor": undefined,
                        "value": "bluebase-light",
                      },
                      Object {
                        "label": "BlueBase Dark",
                        "textColor": undefined,
                        "value": "bluebase-dark",
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "BlueBase Light",
                          "textColor": undefined,
                          "value": "bluebase-light",
                        },
                        Object {
                          "label": "BlueBase Dark",
                          "textColor": undefined,
                          "value": "bluebase-dark",
                        },
                      ]
                    }
                    onChange={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                  />
                </_class>
              </View>
            </View>
          </PickerIOS>
        </Picker>
      </ThemePicker>
      <ThemeDemo>
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "padding": 8,
            }
          }
        >
          <ThemedComponent
            style={
              Object {
                "backgroundColor": "#fafafa",
                "padding": 8,
              }
            }
          >
            <ThemedComponent
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "padding": 8,
                }
              }
            >
              <ThemedComponent
                style={
                  Object {
                    "backgroundColor": "#fafafa",
                    "padding": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#fafafa",
                      "padding": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#fafafa",
                        "padding": 8,
                      }
                    }
                  >
                    <Body1>
                      <ThemedComponent>
                        <Component
                          styles={
                            Object {
                              "root": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontWeight": "400",
                              },
                            }
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": undefined,
                                  "fontSize": 16,
                                  "fontWeight": "400",
                                },
                                undefined,
                              ]
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": undefined,
                                    "fontSize": 16,
                                    "fontWeight": "400",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              BlueBase Light
                            </Text>
                          </Text>
                        </Component>
                      </ThemedComponent>
                    </Body1>
                  </View>
                </View>
              </ThemedComponent>
            </ThemedComponent>
          </ThemedComponent>
        </View>
      </ThemeDemo>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`ThemeContext should throw an error when changing theme based to unknown theme 2`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ErrorState
        error={[Error: Could not change theme. Reason: Theme with the key "does-not-exist" does not exist.]}
        retry={[Function]}
      >
        <ThemedComponent
          error={[Error: Could not change theme. Reason: Theme with the key "does-not-exist" does not exist.]}
          retry={[Function]}
        >
          <ErrorState
            error={[Error: Could not change theme. Reason: Theme with the key "does-not-exist" does not exist.]}
            retry={[Function]}
          >
            <ComponentState
              actionOnPress={[Function]}
              actionTitle="Retry"
              description="Could not change theme. Reason: Theme with the key \\"does-not-exist\\" does not exist."
              title="Error"
            >
              <ThemedComponent
                actionOnPress={[Function]}
                actionTitle="Retry"
                description="Could not change theme. Reason: Theme with the key \\"does-not-exist\\" does not exist."
                title="Error"
              >
                <ThemedComponent
                  actionOnPress={[Function]}
                  actionTitle="Retry"
                  description="Could not change theme. Reason: Theme with the key \\"does-not-exist\\" does not exist."
                  title="Error"
                >
                  <ThemedComponent
                    actionOnPress={[Function]}
                    actionTitle="Retry"
                    description="Could not change theme. Reason: Theme with the key \\"does-not-exist\\" does not exist."
                    title="Error"
                  >
                    <ComponentState
                      actionOnPress={[Function]}
                      actionTitle="Retry"
                      description="Could not change theme. Reason: Theme with the key \\"does-not-exist\\" does not exist."
                      styles={
                        Object {
                          "actionRoot": Object {
                            "marginTop": 8,
                          },
                          "description": Object {
                            "marginBottom": 8,
                            "textAlign": "center",
                          },
                          "image": Object {
                            "height": 250,
                            "width": 250,
                          },
                          "imageRoot": Object {
                            "marginBottom": 16,
                          },
                          "root": Object {
                            "alignItems": "center",
                            "flex": 1,
                            "justifyContent": "center",
                          },
                          "title": Object {
                            "marginBottom": 8,
                            "textAlign": "center",
                          },
                        }
                      }
                      title="Error"
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flex": 1,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <ThemedComponent
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <ThemedComponent
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": 1,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <ThemedComponent
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flex": 1,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <ThemedComponent
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flex": 1,
                                    "justifyContent": "center",
                                  }
                                }
                              >
                                <ThemedComponent
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <ThemedComponent
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "flex": 1,
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flex": 1,
                                          "justifyContent": "center",
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flex": 1,
                                            "justifyContent": "center",
                                          }
                                        }
                                      >
                                        <H6
                                          style={
                                            Object {
                                              "marginBottom": 8,
                                              "textAlign": "center",
                                            }
                                          }
                                        >
                                          <ThemedComponent
                                            style={
                                              Object {
                                                "marginBottom": 8,
                                                "textAlign": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              style={
                                                Object {
                                                  "marginBottom": 8,
                                                  "textAlign": "center",
                                                }
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "rgba(0, 0, 0, 0.87)",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                            >
                                              <Text
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Object {
                                                      "marginBottom": 8,
                                                      "textAlign": "center",
                                                    },
                                                  ]
                                                }
                                              >
                                                <Text
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Object {
                                                        "marginBottom": 8,
                                                        "textAlign": "center",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  Error
                                                </Text>
                                              </Text>
                                            </Component>
                                          </ThemedComponent>
                                        </H6>
                                        <Body2
                                          style={
                                            Object {
                                              "marginBottom": 8,
                                              "textAlign": "center",
                                            }
                                          }
                                        >
                                          <ThemedComponent
                                            style={
                                              Object {
                                                "marginBottom": 8,
                                                "textAlign": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              style={
                                                Object {
                                                  "marginBottom": 8,
                                                  "textAlign": "center",
                                                }
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "rgba(0, 0, 0, 0.87)",
                                                    "fontFamily": undefined,
                                                    "fontSize": 14,
                                                    "fontWeight": "400",
                                                  },
                                                }
                                              }
                                            >
                                              <Text
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": undefined,
                                                      "fontSize": 14,
                                                      "fontWeight": "400",
                                                    },
                                                    Object {
                                                      "marginBottom": 8,
                                                      "textAlign": "center",
                                                    },
                                                  ]
                                                }
                                              >
                                                <Text
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": undefined,
                                                        "fontSize": 14,
                                                        "fontWeight": "400",
                                                      },
                                                      Object {
                                                        "marginBottom": 8,
                                                        "textAlign": "center",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  Could not change theme. Reason: Theme with the key "does-not-exist" does not exist.
                                                </Text>
                                              </Text>
                                            </Component>
                                          </ThemedComponent>
                                        </Body2>
                                        <View
                                          style={
                                            Object {
                                              "marginTop": 8,
                                            }
                                          }
                                        >
                                          <ThemedComponent
                                            style={
                                              Object {
                                                "marginTop": 8,
                                              }
                                            }
                                          >
                                            <ThemedComponent
                                              style={
                                                Object {
                                                  "marginTop": 8,
                                                }
                                              }
                                            >
                                              <ThemedComponent
                                                style={
                                                  Object {
                                                    "marginTop": 8,
                                                  }
                                                }
                                              >
                                                <ThemedComponent
                                                  style={
                                                    Object {
                                                      "marginTop": 8,
                                                    }
                                                  }
                                                >
                                                  <ThemedComponent
                                                    style={
                                                      Object {
                                                        "marginTop": 8,
                                                      }
                                                    }
                                                  >
                                                    <ThemedComponent
                                                      style={
                                                        Object {
                                                          "marginTop": 8,
                                                        }
                                                      }
                                                    >
                                                      <ThemedComponent
                                                        style={
                                                          Object {
                                                            "marginTop": 8,
                                                          }
                                                        }
                                                      >
                                                        <View
                                                          style={
                                                            Object {
                                                              "marginTop": 8,
                                                            }
                                                          }
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "marginTop": 8,
                                                              }
                                                            }
                                                          >
                                                            <Button
                                                              color="primary"
                                                              onPress={[Function]}
                                                            >
                                                              <ThemedComponent
                                                                color="primary"
                                                                onPress={[Function]}
                                                              >
                                                                <Button
                                                                  color="primary"
                                                                  onPress={[Function]}
                                                                  styles={
                                                                    Object {
                                                                      "default": Object {
                                                                        "backgroundColor": "#fafafa",
                                                                      },
                                                                      "defaultText": Object {},
                                                                      "fullWidth": Object {
                                                                        "alignSelf": "stretch",
                                                                      },
                                                                      "link": Object {},
                                                                      "linkText": Object {},
                                                                      "primary": Object {
                                                                        "backgroundColor": "#3f51b5",
                                                                      },
                                                                      "primaryText": Object {
                                                                        "color": "#fff",
                                                                      },
                                                                      "root": Object {
                                                                        "alignSelf": "flex-start",
                                                                        "borderRadius": 4,
                                                                        "paddingBottom": 8,
                                                                        "paddingLeft": 16,
                                                                        "paddingRight": 16,
                                                                        "paddingTop": 8,
                                                                      },
                                                                      "secondary": Object {
                                                                        "backgroundColor": "#f50057",
                                                                      },
                                                                      "secondaryText": Object {
                                                                        "color": "#fff",
                                                                      },
                                                                      "text": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": undefined,
                                                                        "fontSize": 14,
                                                                        "fontWeight": "500",
                                                                        "textAlign": "center",
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                    }
                                                                  }
                                                                >
                                                                  <TouchableOpacity
                                                                    accessibilityRole="button"
                                                                    activeOpacity={0.2}
                                                                    onPress={[Function]}
                                                                  >
                                                                    <AnimatedComponent
                                                                      accessibilityRole="button"
                                                                      accessible={true}
                                                                      isTVSelectable={true}
                                                                      onResponderGrant={[Function]}
                                                                      onResponderMove={[Function]}
                                                                      onResponderRelease={[Function]}
                                                                      onResponderTerminate={[Function]}
                                                                      onResponderTerminationRequest={[Function]}
                                                                      onStartShouldSetResponder={[Function]}
                                                                      style={
                                                                        Array [
                                                                          undefined,
                                                                          Object {
                                                                            "opacity": 1,
                                                                          },
                                                                        ]
                                                                      }
                                                                    >
                                                                      <View
                                                                        accessibilityRole="button"
                                                                        accessible={true}
                                                                        isTVSelectable={true}
                                                                        onResponderGrant={[Function]}
                                                                        onResponderMove={[Function]}
                                                                        onResponderRelease={[Function]}
                                                                        onResponderTerminate={[Function]}
                                                                        onResponderTerminationRequest={[Function]}
                                                                        onStartShouldSetResponder={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "opacity": 1,
                                                                          }
                                                                        }
                                                                      >
                                                                        <View
                                                                          accessibilityRole="button"
                                                                          accessible={true}
                                                                          isTVSelectable={true}
                                                                          onResponderGrant={[Function]}
                                                                          onResponderMove={[Function]}
                                                                          onResponderRelease={[Function]}
                                                                          onResponderTerminate={[Function]}
                                                                          onResponderTerminationRequest={[Function]}
                                                                          onStartShouldSetResponder={[Function]}
                                                                          style={
                                                                            Object {
                                                                              "opacity": 1,
                                                                            }
                                                                          }
                                                                        >
                                                                          <View
                                                                            style={
                                                                              Array [
                                                                                Object {
                                                                                  "alignSelf": "flex-start",
                                                                                  "borderRadius": 4,
                                                                                  "paddingBottom": 8,
                                                                                  "paddingLeft": 16,
                                                                                  "paddingRight": 16,
                                                                                  "paddingTop": 8,
                                                                                },
                                                                                Object {
                                                                                  "backgroundColor": "#3f51b5",
                                                                                },
                                                                              ]
                                                                            }
                                                                          >
                                                                            <View
                                                                              style={
                                                                                Array [
                                                                                  Object {
                                                                                    "alignSelf": "flex-start",
                                                                                    "borderRadius": 4,
                                                                                    "paddingBottom": 8,
                                                                                    "paddingLeft": 16,
                                                                                    "paddingRight": 16,
                                                                                    "paddingTop": 8,
                                                                                  },
                                                                                  Object {
                                                                                    "backgroundColor": "#3f51b5",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            >
                                                                              <Text
                                                                                style={
                                                                                  Array [
                                                                                    Object {
                                                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                                                      "fontFamily": undefined,
                                                                                      "fontSize": 14,
                                                                                      "fontWeight": "500",
                                                                                      "textAlign": "center",
                                                                                      "textTransform": "uppercase",
                                                                                    },
                                                                                    Object {
                                                                                      "color": "#fff",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              >
                                                                                <Text
                                                                                  style={
                                                                                    Array [
                                                                                      Object {
                                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                                        "fontFamily": undefined,
                                                                                        "fontSize": 14,
                                                                                        "fontWeight": "500",
                                                                                        "textAlign": "center",
                                                                                        "textTransform": "uppercase",
                                                                                      },
                                                                                      Object {
                                                                                        "color": "#fff",
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                >
                                                                                  Retry
                                                                                </Text>
                                                                              </Text>
                                                                            </View>
                                                                          </View>
                                                                        </View>
                                                                      </View>
                                                                    </AnimatedComponent>
                                                                  </TouchableOpacity>
                                                                </Button>
                                                              </ThemedComponent>
                                                            </Button>
                                                          </View>
                                                        </View>
                                                      </ThemedComponent>
                                                    </ThemedComponent>
                                                  </ThemedComponent>
                                                </ThemedComponent>
                                              </ThemedComponent>
                                            </ThemedComponent>
                                          </ThemedComponent>
                                        </View>
                                      </View>
                                    </View>
                                  </ThemedComponent>
                                </ThemedComponent>
                              </ThemedComponent>
                            </ThemedComponent>
                          </ThemedComponent>
                        </ThemedComponent>
                      </View>
                    </ComponentState>
                  </ThemedComponent>
                </ThemedComponent>
              </ThemedComponent>
            </ComponentState>
          </ErrorState>
        </ThemedComponent>
      </ErrorState>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`ThemeContext should throw render error state if state.theme is undefined 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemePicker>
        <Picker
          mode="dialog"
          onValueChange={[Function]}
          selectedValue="bluebase-light"
          style={
            Object {
              "width": 150,
            }
          }
        >
          <PickerIOS
            mode="dialog"
            onValueChange={[Function]}
            selectedValue="bluebase-light"
            style={
              Object {
                "width": 150,
              }
            }
          >
            <View
              style={
                Object {
                  "width": 150,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": 150,
                  }
                }
              >
                <_class
                  items={
                    Array [
                      Object {
                        "label": "BlueBase Light",
                        "textColor": undefined,
                        "value": "bluebase-light",
                      },
                      Object {
                        "label": "BlueBase Dark",
                        "textColor": undefined,
                        "value": "bluebase-dark",
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "BlueBase Light",
                          "textColor": undefined,
                          "value": "bluebase-light",
                        },
                        Object {
                          "label": "BlueBase Dark",
                          "textColor": undefined,
                          "value": "bluebase-dark",
                        },
                      ]
                    }
                    onChange={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                  />
                </_class>
              </View>
            </View>
          </PickerIOS>
        </Picker>
      </ThemePicker>
      <ThemeDemo>
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "padding": 8,
            }
          }
        >
          <ThemedComponent
            style={
              Object {
                "backgroundColor": "#fafafa",
                "padding": 8,
              }
            }
          >
            <ThemedComponent
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "padding": 8,
                }
              }
            >
              <ThemedComponent
                style={
                  Object {
                    "backgroundColor": "#fafafa",
                    "padding": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#fafafa",
                      "padding": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#fafafa",
                        "padding": 8,
                      }
                    }
                  >
                    <Body1>
                      <ThemedComponent>
                        <Component
                          styles={
                            Object {
                              "root": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontWeight": "400",
                              },
                            }
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": undefined,
                                  "fontSize": 16,
                                  "fontWeight": "400",
                                },
                                undefined,
                              ]
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": undefined,
                                    "fontSize": 16,
                                    "fontWeight": "400",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              BlueBase Light
                            </Text>
                          </Text>
                        </Component>
                      </ThemedComponent>
                    </Body1>
                  </View>
                </View>
              </ThemedComponent>
            </ThemedComponent>
          </ThemedComponent>
        </View>
      </ThemeDemo>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`ThemeContext should throw render error state if state.theme is undefined 2`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ErrorState
        error={[Error: Could not load theme.]}
      >
        <ThemedComponent
          error={[Error: Could not load theme.]}
        >
          <ErrorState
            error={[Error: Could not load theme.]}
          >
            <ComponentState
              description="Could not load theme."
              title="Error"
            >
              <ThemedComponent
                description="Could not load theme."
                title="Error"
              >
                <ThemedComponent
                  description="Could not load theme."
                  title="Error"
                >
                  <ComponentState
                    description="Could not load theme."
                    styles={
                      Object {
                        "actionRoot": Object {
                          "marginTop": 8,
                        },
                        "description": Object {
                          "marginBottom": 8,
                          "textAlign": "center",
                        },
                        "image": Object {
                          "height": 250,
                          "width": 250,
                        },
                        "imageRoot": Object {
                          "marginBottom": 16,
                        },
                        "root": Object {
                          "alignItems": "center",
                          "flex": 1,
                          "justifyContent": "center",
                        },
                        "title": Object {
                          "marginBottom": 8,
                          "textAlign": "center",
                        },
                      }
                    }
                    title="Error"
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "justifyContent": "center",
                        }
                      }
                    >
                      <ThemedComponent
                        style={
                          Object {
                            "alignItems": "center",
                            "flex": 1,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <ThemedComponent
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <ThemedComponent
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": 1,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <ThemedComponent
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flex": 1,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flex": 1,
                                    "justifyContent": "center",
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <H6
                                    style={
                                      Object {
                                        "marginBottom": 8,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    <ThemedComponent
                                      style={
                                        Object {
                                          "marginBottom": 8,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      <Component
                                        style={
                                          Object {
                                            "marginBottom": 8,
                                            "textAlign": "center",
                                          }
                                        }
                                        styles={
                                          Object {
                                            "root": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": undefined,
                                              "fontSize": 20,
                                              "fontWeight": "500",
                                            },
                                          }
                                        }
                                      >
                                        <Text
                                          style={
                                            Array [
                                              Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontFamily": undefined,
                                                "fontSize": 20,
                                                "fontWeight": "500",
                                              },
                                              Object {
                                                "marginBottom": 8,
                                                "textAlign": "center",
                                              },
                                            ]
                                          }
                                        >
                                          <Text
                                            style={
                                              Array [
                                                Object {
                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                  "fontFamily": undefined,
                                                  "fontSize": 20,
                                                  "fontWeight": "500",
                                                },
                                                Object {
                                                  "marginBottom": 8,
                                                  "textAlign": "center",
                                                },
                                              ]
                                            }
                                          >
                                            Error
                                          </Text>
                                        </Text>
                                      </Component>
                                    </ThemedComponent>
                                  </H6>
                                  <Body2
                                    style={
                                      Object {
                                        "marginBottom": 8,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    <ThemedComponent
                                      style={
                                        Object {
                                          "marginBottom": 8,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      <Component
                                        style={
                                          Object {
                                            "marginBottom": 8,
                                            "textAlign": "center",
                                          }
                                        }
                                        styles={
                                          Object {
                                            "root": Object {
                                              "color": "rgba(0, 0, 0, 0.87)",
                                              "fontFamily": undefined,
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                            },
                                          }
                                        }
                                      >
                                        <Text
                                          style={
                                            Array [
                                              Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontFamily": undefined,
                                                "fontSize": 14,
                                                "fontWeight": "400",
                                              },
                                              Object {
                                                "marginBottom": 8,
                                                "textAlign": "center",
                                              },
                                            ]
                                          }
                                        >
                                          <Text
                                            style={
                                              Array [
                                                Object {
                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                  "fontFamily": undefined,
                                                  "fontSize": 14,
                                                  "fontWeight": "400",
                                                },
                                                Object {
                                                  "marginBottom": 8,
                                                  "textAlign": "center",
                                                },
                                              ]
                                            }
                                          >
                                            Could not load theme.
                                          </Text>
                                        </Text>
                                      </Component>
                                    </ThemedComponent>
                                  </Body2>
                                </View>
                              </View>
                            </ThemedComponent>
                          </ThemedComponent>
                        </ThemedComponent>
                      </ThemedComponent>
                    </View>
                  </ComponentState>
                </ThemedComponent>
              </ThemedComponent>
            </ComponentState>
          </ErrorState>
        </ThemedComponent>
      </ErrorState>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;
