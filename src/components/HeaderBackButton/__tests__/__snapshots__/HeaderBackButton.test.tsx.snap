// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderBackButton should not render title when title prop is null 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton
        backTitleVisible={true}
        title={null}
      >
        <ThemedComponent
          backTitleVisible={true}
          title={null}
        >
          <HeaderBackButton
            backTitleVisible={true}
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            title={null}
            truncatedTitle="Back"
          >
            <NavigationActions>
              <ThemedComponent>
                <Component>
                  <TouchableItem
                    accessibilityComponentType="button"
                    accessibilityLabel="Go back"
                    accessibilityRole="button"
                    accessibilityTraits="button"
                    accessible={true}
                    borderless={true}
                    delayPressIn={0}
                    onPress={[Function]}
                    pressColor="rgba(0, 0, 0, .32)"
                    testID="header-back"
                  >
                    <TouchableOpacity
                      accessibilityComponentType="button"
                      accessibilityLabel="Go back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      activeOpacity={0.2}
                      borderless={true}
                      delayPressIn={0}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <AnimatedComponent
                        accessibilityLabel="Go back"
                        accessibilityRole="button"
                        accessible={true}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            undefined,
                            Object {
                              "opacity": 1,
                            },
                          ]
                        }
                        testID="header-back"
                      >
                        <View
                          accessibilityLabel="Go back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="Go back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "transparent",
                                  "flexDirection": "row",
                                }
                              }
                              testID="header-back-wrapper"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <Component
                                  fadeDuration={0}
                                  source="test-file-stub"
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "height": 21,
                                        "marginLeft": 9,
                                        "marginRight": 22,
                                        "marginVertical": 12,
                                        "resizeMode": "contain",
                                        "transform": Array [
                                          Object {
                                            "scaleX": 1,
                                          },
                                        ],
                                        "width": 13,
                                      },
                                      Object {
                                        "marginRight": 6,
                                      },
                                      Object {
                                        "tintColor": "#fff",
                                      },
                                    ]
                                  }
                                >
                                  <Image
                                    fadeDuration={0}
                                    source="test-file-stub"
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "height": 21,
                                          "marginLeft": 9,
                                          "marginRight": 22,
                                          "marginVertical": 12,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 13,
                                        },
                                        Object {
                                          "marginRight": 6,
                                        },
                                        Object {
                                          "tintColor": "#fff",
                                        },
                                      ]
                                    }
                                  />
                                </Component>
                              </View>
                            </View>
                          </View>
                        </View>
                      </AnimatedComponent>
                    </TouchableOpacity>
                  </TouchableItem>
                </Component>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton>
        <ThemedComponent>
          <HeaderBackButton
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            truncatedTitle="Back"
          >
            <NavigationActions>
              <ThemedComponent>
                <Component>
                  <TouchableItem
                    accessibilityComponentType="button"
                    accessibilityLabel="Go back"
                    accessibilityRole="button"
                    accessibilityTraits="button"
                    accessible={true}
                    borderless={true}
                    delayPressIn={0}
                    onPress={[Function]}
                    pressColor="rgba(0, 0, 0, .32)"
                    testID="header-back"
                  >
                    <TouchableOpacity
                      accessibilityComponentType="button"
                      accessibilityLabel="Go back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      activeOpacity={0.2}
                      borderless={true}
                      delayPressIn={0}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <AnimatedComponent
                        accessibilityLabel="Go back"
                        accessibilityRole="button"
                        accessible={true}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            undefined,
                            Object {
                              "opacity": 1,
                            },
                          ]
                        }
                        testID="header-back"
                      >
                        <View
                          accessibilityLabel="Go back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="Go back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "transparent",
                                  "flexDirection": "row",
                                }
                              }
                              testID="header-back-wrapper"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <Component
                                  fadeDuration={0}
                                  source="test-file-stub"
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "height": 21,
                                        "marginLeft": 9,
                                        "marginRight": 22,
                                        "marginVertical": 12,
                                        "resizeMode": "contain",
                                        "transform": Array [
                                          Object {
                                            "scaleX": 1,
                                          },
                                        ],
                                        "width": 13,
                                      },
                                      false,
                                      Object {
                                        "tintColor": "#fff",
                                      },
                                    ]
                                  }
                                >
                                  <Image
                                    fadeDuration={0}
                                    source="test-file-stub"
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "height": 21,
                                          "marginLeft": 9,
                                          "marginRight": 22,
                                          "marginVertical": 12,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 13,
                                        },
                                        false,
                                        Object {
                                          "tintColor": "#fff",
                                        },
                                      ]
                                    }
                                  />
                                </Component>
                              </View>
                            </View>
                          </View>
                        </View>
                      </AnimatedComponent>
                    </TouchableOpacity>
                  </TouchableItem>
                </Component>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image and custom title 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton
        backTitleVisible={true}
        title="Foo"
      >
        <ThemedComponent
          backTitleVisible={true}
          title="Foo"
        >
          <HeaderBackButton
            backTitleVisible={true}
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            title="Foo"
            truncatedTitle="Back"
          >
            <NavigationActions>
              <ThemedComponent>
                <Component>
                  <TouchableItem
                    accessibilityComponentType="button"
                    accessibilityLabel="Foo, back"
                    accessibilityRole="button"
                    accessibilityTraits="button"
                    accessible={true}
                    borderless={true}
                    delayPressIn={0}
                    onPress={[Function]}
                    pressColor="rgba(0, 0, 0, .32)"
                    testID="header-back"
                  >
                    <TouchableOpacity
                      accessibilityComponentType="button"
                      accessibilityLabel="Foo, back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      activeOpacity={0.2}
                      borderless={true}
                      delayPressIn={0}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <AnimatedComponent
                        accessibilityLabel="Foo, back"
                        accessibilityRole="button"
                        accessible={true}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            undefined,
                            Object {
                              "opacity": 1,
                            },
                          ]
                        }
                        testID="header-back"
                      >
                        <View
                          accessibilityLabel="Foo, back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="Foo, back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "transparent",
                                  "flexDirection": "row",
                                }
                              }
                              testID="header-back-wrapper"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <Component
                                  fadeDuration={0}
                                  source="test-file-stub"
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "height": 21,
                                        "marginLeft": 9,
                                        "marginRight": 22,
                                        "marginVertical": 12,
                                        "resizeMode": "contain",
                                        "transform": Array [
                                          Object {
                                            "scaleX": 1,
                                          },
                                        ],
                                        "width": 13,
                                      },
                                      Object {
                                        "marginRight": 6,
                                      },
                                      Object {
                                        "tintColor": "#fff",
                                      },
                                    ]
                                  }
                                >
                                  <Image
                                    fadeDuration={0}
                                    source="test-file-stub"
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "height": 21,
                                          "marginLeft": 9,
                                          "marginRight": 22,
                                          "marginVertical": 12,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 13,
                                        },
                                        Object {
                                          "marginRight": 6,
                                        },
                                        Object {
                                          "tintColor": "#fff",
                                        },
                                      ]
                                    }
                                  />
                                </Component>
                                <Text
                                  accessible={false}
                                  allowFontScaling={false}
                                  numberOfLines={1}
                                  onLayout={[Function]}
                                  style={
                                    Array [
                                      Object {
                                        "color": "#fff",
                                        "fontSize": 17,
                                        "paddingRight": 10,
                                      },
                                      false,
                                      undefined,
                                    ]
                                  }
                                  testID="header-back-title"
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    numberOfLines={1}
                                    onLayout={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#fff",
                                          "fontSize": 17,
                                          "paddingRight": 10,
                                        },
                                        false,
                                        undefined,
                                      ]
                                    }
                                    testID="header-back-title"
                                  >
                                    Foo
                                  </Text>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </AnimatedComponent>
                    </TouchableOpacity>
                  </TouchableItem>
                </Component>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image and custom truncated title 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton
        backTitleVisible={true}
        title="A very very long title sentence"
        truncatedTitle="What? lol"
        width={100}
      >
        <ThemedComponent
          backTitleVisible={true}
          title="A very very long title sentence"
          truncatedTitle="What? lol"
          width={100}
        >
          <HeaderBackButton
            backTitleVisible={true}
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            title="A very very long title sentence"
            truncatedTitle="What? lol"
            width={100}
          >
            <NavigationActions>
              <ThemedComponent>
                <ThemedComponent>
                  <Component>
                    <TouchableItem
                      accessibilityComponentType="button"
                      accessibilityLabel="A very very long title sentence, back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      borderless={true}
                      delayPressIn={0}
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <TouchableOpacity
                        accessibilityComponentType="button"
                        accessibilityLabel="A very very long title sentence, back"
                        accessibilityRole="button"
                        accessibilityTraits="button"
                        accessible={true}
                        activeOpacity={0.2}
                        borderless={true}
                        delayPressIn={0}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onPress={[Function]}
                        pressColor="rgba(0, 0, 0, .32)"
                        testID="header-back"
                      >
                        <AnimatedComponent
                          accessibilityLabel="A very very long title sentence, back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              undefined,
                              Object {
                                "opacity": 1,
                              },
                            ]
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="A very very long title sentence, back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              accessibilityLabel="A very very long title sentence, back"
                              accessibilityRole="button"
                              accessible={true}
                              hitSlop={
                                Object {
                                  "bottom": 10,
                                  "left": 10,
                                  "right": 10,
                                  "top": 10,
                                }
                              }
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="header-back"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "transparent",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="header-back-wrapper"
                                >
                                  <Component
                                    fadeDuration={0}
                                    source="test-file-stub"
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "height": 21,
                                          "marginLeft": 9,
                                          "marginRight": 22,
                                          "marginVertical": 12,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 13,
                                        },
                                        Object {
                                          "marginRight": 6,
                                        },
                                        Object {
                                          "tintColor": "#fff",
                                        },
                                      ]
                                    }
                                  >
                                    <Image
                                      fadeDuration={0}
                                      source="test-file-stub"
                                      style={
                                        Array [
                                          Object {
                                            "backgroundColor": "transparent",
                                            "height": 21,
                                            "marginLeft": 9,
                                            "marginRight": 22,
                                            "marginVertical": 12,
                                            "resizeMode": "contain",
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                            "width": 13,
                                          },
                                          Object {
                                            "marginRight": 6,
                                          },
                                          Object {
                                            "tintColor": "#fff",
                                          },
                                        ]
                                      }
                                    />
                                  </Component>
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    numberOfLines={1}
                                    onLayout={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#fff",
                                          "fontSize": 17,
                                          "paddingRight": 10,
                                        },
                                        false,
                                        undefined,
                                      ]
                                    }
                                    testID="header-back-title"
                                  >
                                    <Text
                                      accessible={false}
                                      allowFontScaling={false}
                                      numberOfLines={1}
                                      onLayout={[Function]}
                                      style={
                                        Array [
                                          Object {
                                            "color": "#fff",
                                            "fontSize": 17,
                                            "paddingRight": 10,
                                          },
                                          false,
                                          undefined,
                                        ]
                                      }
                                      testID="header-back-title"
                                    >
                                      What? lol
                                    </Text>
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </AnimatedComponent>
                      </TouchableOpacity>
                    </TouchableItem>
                  </Component>
                </ThemedComponent>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image and custom truncated title 2`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton
        backTitleVisible={true}
        title="A very very long title sentence"
        truncatedTitle="What? lol"
        width={100}
      >
        <ThemedComponent
          backTitleVisible={true}
          title="A very very long title sentence"
          truncatedTitle="What? lol"
          width={100}
        >
          <HeaderBackButton
            backTitleVisible={true}
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            title="A very very long title sentence"
            truncatedTitle="What? lol"
            width={100}
          >
            <NavigationActions>
              <ThemedComponent>
                <ThemedComponent>
                  <Component>
                    <TouchableItem
                      accessibilityComponentType="button"
                      accessibilityLabel="A very very long title sentence, back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      borderless={true}
                      delayPressIn={0}
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <TouchableOpacity
                        accessibilityComponentType="button"
                        accessibilityLabel="A very very long title sentence, back"
                        accessibilityRole="button"
                        accessibilityTraits="button"
                        accessible={true}
                        activeOpacity={0.2}
                        borderless={true}
                        delayPressIn={0}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onPress={[Function]}
                        pressColor="rgba(0, 0, 0, .32)"
                        testID="header-back"
                      >
                        <AnimatedComponent
                          accessibilityLabel="A very very long title sentence, back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              undefined,
                              Object {
                                "opacity": 1,
                              },
                            ]
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="A very very long title sentence, back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              accessibilityLabel="A very very long title sentence, back"
                              accessibilityRole="button"
                              accessible={true}
                              hitSlop={
                                Object {
                                  "bottom": 10,
                                  "left": 10,
                                  "right": 10,
                                  "top": 10,
                                }
                              }
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="header-back"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "transparent",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="header-back-wrapper"
                                >
                                  <Component
                                    fadeDuration={0}
                                    source="test-file-stub"
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "height": 21,
                                          "marginLeft": 9,
                                          "marginRight": 22,
                                          "marginVertical": 12,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 13,
                                        },
                                        Object {
                                          "marginRight": 6,
                                        },
                                        Object {
                                          "tintColor": "#fff",
                                        },
                                      ]
                                    }
                                  >
                                    <Image
                                      fadeDuration={0}
                                      source="test-file-stub"
                                      style={
                                        Array [
                                          Object {
                                            "backgroundColor": "transparent",
                                            "height": 21,
                                            "marginLeft": 9,
                                            "marginRight": 22,
                                            "marginVertical": 12,
                                            "resizeMode": "contain",
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                            "width": 13,
                                          },
                                          Object {
                                            "marginRight": 6,
                                          },
                                          Object {
                                            "tintColor": "#fff",
                                          },
                                        ]
                                      }
                                    />
                                  </Component>
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    numberOfLines={1}
                                    onLayout={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#fff",
                                          "fontSize": 17,
                                          "paddingRight": 10,
                                        },
                                        false,
                                        undefined,
                                      ]
                                    }
                                    testID="header-back-title"
                                  >
                                    <Text
                                      accessible={false}
                                      allowFontScaling={false}
                                      numberOfLines={1}
                                      onLayout={[Function]}
                                      style={
                                        Array [
                                          Object {
                                            "color": "#fff",
                                            "fontSize": 17,
                                            "paddingRight": 10,
                                          },
                                          false,
                                          undefined,
                                        ]
                                      }
                                      testID="header-back-title"
                                    >
                                      What? lol
                                    </Text>
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </AnimatedComponent>
                      </TouchableOpacity>
                    </TouchableItem>
                  </Component>
                </ThemedComponent>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image and standard title 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton
        backTitleVisible={true}
      >
        <ThemedComponent
          backTitleVisible={true}
        >
          <HeaderBackButton
            backTitleVisible={true}
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            truncatedTitle="Back"
          >
            <NavigationActions>
              <ThemedComponent>
                <Component>
                  <TouchableItem
                    accessibilityComponentType="button"
                    accessibilityLabel="Go back"
                    accessibilityRole="button"
                    accessibilityTraits="button"
                    accessible={true}
                    borderless={true}
                    delayPressIn={0}
                    onPress={[Function]}
                    pressColor="rgba(0, 0, 0, .32)"
                    testID="header-back"
                  >
                    <TouchableOpacity
                      accessibilityComponentType="button"
                      accessibilityLabel="Go back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      activeOpacity={0.2}
                      borderless={true}
                      delayPressIn={0}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <AnimatedComponent
                        accessibilityLabel="Go back"
                        accessibilityRole="button"
                        accessible={true}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            undefined,
                            Object {
                              "opacity": 1,
                            },
                          ]
                        }
                        testID="header-back"
                      >
                        <View
                          accessibilityLabel="Go back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="Go back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "transparent",
                                  "flexDirection": "row",
                                }
                              }
                              testID="header-back-wrapper"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <Component
                                  fadeDuration={0}
                                  source="test-file-stub"
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "height": 21,
                                        "marginLeft": 9,
                                        "marginRight": 22,
                                        "marginVertical": 12,
                                        "resizeMode": "contain",
                                        "transform": Array [
                                          Object {
                                            "scaleX": 1,
                                          },
                                        ],
                                        "width": 13,
                                      },
                                      Object {
                                        "marginRight": 6,
                                      },
                                      Object {
                                        "tintColor": "#fff",
                                      },
                                    ]
                                  }
                                >
                                  <Image
                                    fadeDuration={0}
                                    source="test-file-stub"
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "height": 21,
                                          "marginLeft": 9,
                                          "marginRight": 22,
                                          "marginVertical": 12,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 13,
                                        },
                                        Object {
                                          "marginRight": 6,
                                        },
                                        Object {
                                          "tintColor": "#fff",
                                        },
                                      ]
                                    }
                                  />
                                </Component>
                                <Text
                                  accessible={false}
                                  allowFontScaling={false}
                                  numberOfLines={1}
                                  onLayout={[Function]}
                                  style={
                                    Array [
                                      Object {
                                        "color": "#fff",
                                        "fontSize": 17,
                                        "paddingRight": 10,
                                      },
                                      false,
                                      undefined,
                                    ]
                                  }
                                  testID="header-back-title"
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    numberOfLines={1}
                                    onLayout={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#fff",
                                          "fontSize": 17,
                                          "paddingRight": 10,
                                        },
                                        false,
                                        undefined,
                                      ]
                                    }
                                    testID="header-back-title"
                                  >
                                    Back
                                  </Text>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </AnimatedComponent>
                    </TouchableOpacity>
                  </TouchableItem>
                </Component>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image and title with custom tint color 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton
        backTitleVisible={true}
        tintColor="red"
      >
        <ThemedComponent
          backTitleVisible={true}
          tintColor="red"
        >
          <HeaderBackButton
            backTitleVisible={true}
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            tintColor="red"
            truncatedTitle="Back"
          >
            <NavigationActions>
              <ThemedComponent>
                <ThemedComponent>
                  <Component>
                    <TouchableItem
                      accessibilityComponentType="button"
                      accessibilityLabel="Go back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      borderless={true}
                      delayPressIn={0}
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <TouchableOpacity
                        accessibilityComponentType="button"
                        accessibilityLabel="Go back"
                        accessibilityRole="button"
                        accessibilityTraits="button"
                        accessible={true}
                        activeOpacity={0.2}
                        borderless={true}
                        delayPressIn={0}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onPress={[Function]}
                        pressColor="rgba(0, 0, 0, .32)"
                        testID="header-back"
                      >
                        <AnimatedComponent
                          accessibilityLabel="Go back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              undefined,
                              Object {
                                "opacity": 1,
                              },
                            ]
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="Go back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              accessibilityLabel="Go back"
                              accessibilityRole="button"
                              accessible={true}
                              hitSlop={
                                Object {
                                  "bottom": 10,
                                  "left": 10,
                                  "right": 10,
                                  "top": 10,
                                }
                              }
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="header-back"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "transparent",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="header-back-wrapper"
                                >
                                  <Component
                                    fadeDuration={0}
                                    source="test-file-stub"
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "height": 21,
                                          "marginLeft": 9,
                                          "marginRight": 22,
                                          "marginVertical": 12,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 13,
                                        },
                                        Object {
                                          "marginRight": 6,
                                        },
                                        Object {
                                          "tintColor": "red",
                                        },
                                      ]
                                    }
                                  >
                                    <Image
                                      fadeDuration={0}
                                      source="test-file-stub"
                                      style={
                                        Array [
                                          Object {
                                            "backgroundColor": "transparent",
                                            "height": 21,
                                            "marginLeft": 9,
                                            "marginRight": 22,
                                            "marginVertical": 12,
                                            "resizeMode": "contain",
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                            "width": 13,
                                          },
                                          Object {
                                            "marginRight": 6,
                                          },
                                          Object {
                                            "tintColor": "red",
                                          },
                                        ]
                                      }
                                    />
                                  </Component>
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    numberOfLines={1}
                                    onLayout={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#fff",
                                          "fontSize": 17,
                                          "paddingRight": 10,
                                        },
                                        Object {
                                          "color": "red",
                                        },
                                        undefined,
                                      ]
                                    }
                                    testID="header-back-title"
                                  >
                                    <Text
                                      accessible={false}
                                      allowFontScaling={false}
                                      numberOfLines={1}
                                      onLayout={[Function]}
                                      style={
                                        Array [
                                          Object {
                                            "color": "#fff",
                                            "fontSize": 17,
                                            "paddingRight": 10,
                                          },
                                          Object {
                                            "color": "red",
                                          },
                                          undefined,
                                        ]
                                      }
                                      testID="header-back-title"
                                    >
                                      Back
                                    </Text>
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </AnimatedComponent>
                      </TouchableOpacity>
                    </TouchableItem>
                  </Component>
                </ThemedComponent>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image and truncated title 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton
        backTitleVisible={true}
        title="A very very long title sentence"
        width={100}
      >
        <ThemedComponent
          backTitleVisible={true}
          title="A very very long title sentence"
          width={100}
        >
          <HeaderBackButton
            backTitleVisible={true}
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            title="A very very long title sentence"
            truncatedTitle="Back"
            width={100}
          >
            <NavigationActions>
              <ThemedComponent>
                <ThemedComponent>
                  <Component>
                    <TouchableItem
                      accessibilityComponentType="button"
                      accessibilityLabel="A very very long title sentence, back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      borderless={true}
                      delayPressIn={0}
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <TouchableOpacity
                        accessibilityComponentType="button"
                        accessibilityLabel="A very very long title sentence, back"
                        accessibilityRole="button"
                        accessibilityTraits="button"
                        accessible={true}
                        activeOpacity={0.2}
                        borderless={true}
                        delayPressIn={0}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onPress={[Function]}
                        pressColor="rgba(0, 0, 0, .32)"
                        testID="header-back"
                      >
                        <AnimatedComponent
                          accessibilityLabel="A very very long title sentence, back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              undefined,
                              Object {
                                "opacity": 1,
                              },
                            ]
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="A very very long title sentence, back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              accessibilityLabel="A very very long title sentence, back"
                              accessibilityRole="button"
                              accessible={true}
                              hitSlop={
                                Object {
                                  "bottom": 10,
                                  "left": 10,
                                  "right": 10,
                                  "top": 10,
                                }
                              }
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="header-back"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "transparent",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="header-back-wrapper"
                                >
                                  <Component
                                    fadeDuration={0}
                                    source="test-file-stub"
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "height": 21,
                                          "marginLeft": 9,
                                          "marginRight": 22,
                                          "marginVertical": 12,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 13,
                                        },
                                        Object {
                                          "marginRight": 6,
                                        },
                                        Object {
                                          "tintColor": "#fff",
                                        },
                                      ]
                                    }
                                  >
                                    <Image
                                      fadeDuration={0}
                                      source="test-file-stub"
                                      style={
                                        Array [
                                          Object {
                                            "backgroundColor": "transparent",
                                            "height": 21,
                                            "marginLeft": 9,
                                            "marginRight": 22,
                                            "marginVertical": 12,
                                            "resizeMode": "contain",
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                            "width": 13,
                                          },
                                          Object {
                                            "marginRight": 6,
                                          },
                                          Object {
                                            "tintColor": "#fff",
                                          },
                                        ]
                                      }
                                    />
                                  </Component>
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    numberOfLines={1}
                                    onLayout={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#fff",
                                          "fontSize": 17,
                                          "paddingRight": 10,
                                        },
                                        false,
                                        undefined,
                                      ]
                                    }
                                    testID="header-back-title"
                                  >
                                    <Text
                                      accessible={false}
                                      allowFontScaling={false}
                                      numberOfLines={1}
                                      onLayout={[Function]}
                                      style={
                                        Array [
                                          Object {
                                            "color": "#fff",
                                            "fontSize": 17,
                                            "paddingRight": 10,
                                          },
                                          false,
                                          undefined,
                                        ]
                                      }
                                      testID="header-back-title"
                                    >
                                      Back
                                    </Text>
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </AnimatedComponent>
                      </TouchableOpacity>
                    </TouchableItem>
                  </Component>
                </ThemedComponent>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image on android platform 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton>
        <ThemedComponent>
          <HeaderBackButton
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 24,
                  "margin": 3,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 24,
                },
                "iconWithTitle": Object {},
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            truncatedTitle="Back"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                }
              }
              testID="header-android-wrapper"
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "margin": 13,
                  }
                }
                testID="header-android-wrapper"
              >
                <NavigationActions>
                  <ThemedComponent>
                    <Component>
                      <TouchableItem
                        accessibilityComponentType="button"
                        accessibilityLabel="Go back"
                        accessibilityRole="button"
                        accessibilityTraits="button"
                        accessible={true}
                        borderless={true}
                        delayPressIn={0}
                        onPress={[Function]}
                        pressColor="rgba(0, 0, 0, .32)"
                        testID="header-back"
                      >
                        <TouchableOpacity
                          accessibilityComponentType="button"
                          accessibilityLabel="Go back"
                          accessibilityRole="button"
                          accessibilityTraits="button"
                          accessible={true}
                          activeOpacity={0.2}
                          borderless={true}
                          delayPressIn={0}
                          onPress={[Function]}
                          pressColor="rgba(0, 0, 0, .32)"
                          testID="header-back"
                        >
                          <AnimatedComponent
                            accessibilityLabel="Go back"
                            accessibilityRole="button"
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                undefined,
                                Object {
                                  "opacity": 1,
                                },
                              ]
                            }
                            testID="header-back"
                          >
                            <View
                              accessibilityLabel="Go back"
                              accessibilityRole="button"
                              accessible={true}
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="header-back"
                            >
                              <View
                                accessibilityLabel="Go back"
                                accessibilityRole="button"
                                accessible={true}
                                isTVSelectable={true}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                                testID="header-back"
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "transparent",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="header-back-wrapper"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "transparent",
                                        "flexDirection": "row",
                                      }
                                    }
                                    testID="header-back-wrapper"
                                  >
                                    <Component
                                      fadeDuration={0}
                                      source="test-file-stub"
                                      style={
                                        Array [
                                          Object {
                                            "backgroundColor": "transparent",
                                            "height": 24,
                                            "margin": 3,
                                            "resizeMode": "contain",
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                            "width": 24,
                                          },
                                          false,
                                          Object {
                                            "tintColor": "#fff",
                                          },
                                        ]
                                      }
                                    >
                                      <Image
                                        fadeDuration={0}
                                        source="test-file-stub"
                                        style={
                                          Array [
                                            Object {
                                              "backgroundColor": "transparent",
                                              "height": 24,
                                              "margin": 3,
                                              "resizeMode": "contain",
                                              "transform": Array [
                                                Object {
                                                  "scaleX": 1,
                                                },
                                              ],
                                              "width": 24,
                                            },
                                            false,
                                            Object {
                                              "tintColor": "#fff",
                                            },
                                          ]
                                        }
                                      />
                                    </Component>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </AnimatedComponent>
                        </TouchableOpacity>
                      </TouchableItem>
                    </Component>
                  </ThemedComponent>
                </NavigationActions>
              </View>
            </View>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render back image on android platform 2`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton>
        <ThemedComponent>
          <HeaderBackButton
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 24,
                  "margin": 3,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 24,
                },
                "iconWithTitle": Object {},
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            truncatedTitle="Back"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                }
              }
              testID="header-android-wrapper"
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "margin": 13,
                  }
                }
                testID="header-android-wrapper"
              >
                <NavigationActions>
                  <ThemedComponent>
                    <Component>
                      <TouchableItem
                        accessibilityComponentType="button"
                        accessibilityLabel="Go back"
                        accessibilityRole="button"
                        accessibilityTraits="button"
                        accessible={true}
                        borderless={true}
                        delayPressIn={0}
                        onPress={[Function]}
                        pressColor="rgba(0, 0, 0, .32)"
                        testID="header-back"
                      >
                        <TouchableOpacity
                          accessibilityComponentType="button"
                          accessibilityLabel="Go back"
                          accessibilityRole="button"
                          accessibilityTraits="button"
                          accessible={true}
                          activeOpacity={0.2}
                          borderless={true}
                          delayPressIn={0}
                          onPress={[Function]}
                          pressColor="rgba(0, 0, 0, .32)"
                          testID="header-back"
                        >
                          <AnimatedComponent
                            accessibilityLabel="Go back"
                            accessibilityRole="button"
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                undefined,
                                Object {
                                  "opacity": 1,
                                },
                              ]
                            }
                            testID="header-back"
                          >
                            <View
                              accessibilityLabel="Go back"
                              accessibilityRole="button"
                              accessible={true}
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="header-back"
                            >
                              <View
                                accessibilityLabel="Go back"
                                accessibilityRole="button"
                                accessible={true}
                                isTVSelectable={true}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                                testID="header-back"
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "transparent",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="header-back-wrapper"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "transparent",
                                        "flexDirection": "row",
                                      }
                                    }
                                    testID="header-back-wrapper"
                                  >
                                    <Component
                                      fadeDuration={0}
                                      source="test-file-stub"
                                      style={
                                        Array [
                                          Object {
                                            "backgroundColor": "transparent",
                                            "height": 24,
                                            "margin": 3,
                                            "resizeMode": "contain",
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                            "width": 24,
                                          },
                                          false,
                                          Object {
                                            "tintColor": "#fff",
                                          },
                                        ]
                                      }
                                    >
                                      <Image
                                        fadeDuration={0}
                                        source="test-file-stub"
                                        style={
                                          Array [
                                            Object {
                                              "backgroundColor": "transparent",
                                              "height": 24,
                                              "margin": 3,
                                              "resizeMode": "contain",
                                              "transform": Array [
                                                Object {
                                                  "scaleX": 1,
                                                },
                                              ],
                                              "width": 24,
                                            },
                                            false,
                                            Object {
                                              "tintColor": "#fff",
                                            },
                                          ]
                                        }
                                      />
                                    </Component>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </AnimatedComponent>
                        </TouchableOpacity>
                      </TouchableItem>
                    </Component>
                  </ThemedComponent>
                </NavigationActions>
              </View>
            </View>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should only render reverse back image on rtl layout 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton>
        <ThemedComponent>
          <HeaderBackButton
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 24,
                  "margin": 3,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": -1,
                    },
                  ],
                  "width": 24,
                },
                "iconWithTitle": Object {},
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            truncatedTitle="Back"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                }
              }
              testID="header-android-wrapper"
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "margin": 13,
                  }
                }
                testID="header-android-wrapper"
              >
                <NavigationActions>
                  <ThemedComponent>
                    <Component>
                      <TouchableItem
                        accessibilityComponentType="button"
                        accessibilityLabel="Go back"
                        accessibilityRole="button"
                        accessibilityTraits="button"
                        accessible={true}
                        borderless={true}
                        delayPressIn={0}
                        onPress={[Function]}
                        pressColor="rgba(0, 0, 0, .32)"
                        testID="header-back"
                      >
                        <TouchableOpacity
                          accessibilityComponentType="button"
                          accessibilityLabel="Go back"
                          accessibilityRole="button"
                          accessibilityTraits="button"
                          accessible={true}
                          activeOpacity={0.2}
                          borderless={true}
                          delayPressIn={0}
                          onPress={[Function]}
                          pressColor="rgba(0, 0, 0, .32)"
                          testID="header-back"
                        >
                          <AnimatedComponent
                            accessibilityLabel="Go back"
                            accessibilityRole="button"
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                undefined,
                                Object {
                                  "opacity": 1,
                                },
                              ]
                            }
                            testID="header-back"
                          >
                            <View
                              accessibilityLabel="Go back"
                              accessibilityRole="button"
                              accessible={true}
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="header-back"
                            >
                              <View
                                accessibilityLabel="Go back"
                                accessibilityRole="button"
                                accessible={true}
                                isTVSelectable={true}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                                testID="header-back"
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "transparent",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="header-back-wrapper"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "transparent",
                                        "flexDirection": "row",
                                      }
                                    }
                                    testID="header-back-wrapper"
                                  >
                                    <Component
                                      fadeDuration={0}
                                      source="test-file-stub"
                                      style={
                                        Array [
                                          Object {
                                            "backgroundColor": "transparent",
                                            "height": 24,
                                            "margin": 3,
                                            "resizeMode": "contain",
                                            "transform": Array [
                                              Object {
                                                "scaleX": -1,
                                              },
                                            ],
                                            "width": 24,
                                          },
                                          false,
                                          Object {
                                            "tintColor": "#fff",
                                          },
                                        ]
                                      }
                                    >
                                      <Image
                                        fadeDuration={0}
                                        source="test-file-stub"
                                        style={
                                          Array [
                                            Object {
                                              "backgroundColor": "transparent",
                                              "height": 24,
                                              "margin": 3,
                                              "resizeMode": "contain",
                                              "transform": Array [
                                                Object {
                                                  "scaleX": -1,
                                                },
                                              ],
                                              "width": 24,
                                            },
                                            false,
                                            Object {
                                              "tintColor": "#fff",
                                            },
                                          ]
                                        }
                                      />
                                    </Component>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </AnimatedComponent>
                        </TouchableOpacity>
                      </TouchableItem>
                    </Component>
                  </ThemedComponent>
                </NavigationActions>
              </View>
            </View>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`HeaderBackButton should render custom back image 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <HeaderBackButton
        backImage={
          <Button
            onPress={[Function]}
            title="Far"
          />
        }
        backTitleVisible={true}
      >
        <ThemedComponent
          backImage={
            <Button
              onPress={[Function]}
              title="Far"
            />
          }
          backTitleVisible={true}
        >
          <HeaderBackButton
            backImage={
              <Button
                onPress={[Function]}
                title="Far"
              />
            }
            backTitleVisible={true}
            defaultStyles={Object {}}
            pressColorAndroid="rgba(0, 0, 0, .32)"
            styles={
              Object {
                "androidButtonWrapper": Object {
                  "backgroundColor": "transparent",
                  "margin": 13,
                },
                "icon": Object {
                  "backgroundColor": "transparent",
                  "height": 21,
                  "marginLeft": 9,
                  "marginRight": 22,
                  "marginVertical": 12,
                  "resizeMode": "contain",
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                  "width": 13,
                },
                "iconWithTitle": Object {
                  "marginRight": 6,
                },
                "title": Object {
                  "color": "#fff",
                  "fontSize": 17,
                  "paddingRight": 10,
                },
                "wrapper": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flexDirection": "row",
                },
              }
            }
            truncatedTitle="Back"
          >
            <NavigationActions>
              <ThemedComponent>
                <Component>
                  <TouchableItem
                    accessibilityComponentType="button"
                    accessibilityLabel="Go back"
                    accessibilityRole="button"
                    accessibilityTraits="button"
                    accessible={true}
                    borderless={true}
                    delayPressIn={0}
                    onPress={[Function]}
                    pressColor="rgba(0, 0, 0, .32)"
                    testID="header-back"
                  >
                    <TouchableOpacity
                      accessibilityComponentType="button"
                      accessibilityLabel="Go back"
                      accessibilityRole="button"
                      accessibilityTraits="button"
                      accessible={true}
                      activeOpacity={0.2}
                      borderless={true}
                      delayPressIn={0}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onPress={[Function]}
                      pressColor="rgba(0, 0, 0, .32)"
                      testID="header-back"
                    >
                      <AnimatedComponent
                        accessibilityLabel="Go back"
                        accessibilityRole="button"
                        accessible={true}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            undefined,
                            Object {
                              "opacity": 1,
                            },
                          ]
                        }
                        testID="header-back"
                      >
                        <View
                          accessibilityLabel="Go back"
                          accessibilityRole="button"
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                          testID="header-back"
                        >
                          <View
                            accessibilityLabel="Go back"
                            accessibilityRole="button"
                            accessible={true}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="header-back"
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "transparent",
                                  "flexDirection": "row",
                                }
                              }
                              testID="header-back-wrapper"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "flexDirection": "row",
                                  }
                                }
                                testID="header-back-wrapper"
                              >
                                <Button
                                  onPress={[Function]}
                                  title="Far"
                                >
                                  <TouchableOpacity
                                    accessibilityRole="button"
                                    accessibilityStates={Array []}
                                    activeOpacity={0.2}
                                    onPress={[Function]}
                                  >
                                    <AnimatedComponent
                                      accessibilityRole="button"
                                      accessibilityStates={Array []}
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Array [
                                          undefined,
                                          Object {
                                            "opacity": 1,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        accessibilityRole="button"
                                        accessibilityStates={Array []}
                                        accessible={true}
                                        isTVSelectable={true}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                        style={
                                          Object {
                                            "opacity": 1,
                                          }
                                        }
                                      >
                                        <View
                                          accessibilityRole="button"
                                          accessibilityStates={Array []}
                                          accessible={true}
                                          isTVSelectable={true}
                                          onResponderGrant={[Function]}
                                          onResponderMove={[Function]}
                                          onResponderRelease={[Function]}
                                          onResponderTerminate={[Function]}
                                          onResponderTerminationRequest={[Function]}
                                          onStartShouldSetResponder={[Function]}
                                          style={
                                            Object {
                                              "opacity": 1,
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Array [
                                                Object {},
                                              ]
                                            }
                                          >
                                            <View
                                              style={
                                                Array [
                                                  Object {},
                                                ]
                                              }
                                            >
                                              <Text
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#007AFF",
                                                      "fontSize": 18,
                                                      "padding": 8,
                                                      "textAlign": "center",
                                                    },
                                                  ]
                                                }
                                              >
                                                <Text
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#007AFF",
                                                        "fontSize": 18,
                                                        "padding": 8,
                                                        "textAlign": "center",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  Far
                                                </Text>
                                              </Text>
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </AnimatedComponent>
                                  </TouchableOpacity>
                                </Button>
                                <Text
                                  accessible={false}
                                  allowFontScaling={false}
                                  numberOfLines={1}
                                  onLayout={[Function]}
                                  style={
                                    Array [
                                      Object {
                                        "color": "#fff",
                                        "fontSize": 17,
                                        "paddingRight": 10,
                                      },
                                      false,
                                      undefined,
                                    ]
                                  }
                                  testID="header-back-title"
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    numberOfLines={1}
                                    onLayout={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#fff",
                                          "fontSize": 17,
                                          "paddingRight": 10,
                                        },
                                        false,
                                        undefined,
                                      ]
                                    }
                                    testID="header-back-title"
                                  >
                                    Back
                                  </Text>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </AnimatedComponent>
                    </TouchableOpacity>
                  </TouchableItem>
                </Component>
              </ThemedComponent>
            </NavigationActions>
          </HeaderBackButton>
        </ThemedComponent>
      </HeaderBackButton>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;
