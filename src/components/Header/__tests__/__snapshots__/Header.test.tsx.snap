// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header android enviornment should only render on android platform 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_1c52e6b" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                layoutPreset="center"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_1c52e6b" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  layoutPreset="center"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            layoutPreset="center"
          >
            <ThemedComponent
              layoutPreset="center"
            >
              <Header
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 56,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 56,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginHorizontal": 16,
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        undefined,
                                        Object {
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <HeaderTitle
                                        allowFontScaling={true}
                                        onLayout={[Function]}
                                        style={
                                          Array [
                                            null,
                                            Object {
                                              "textAlign": "center",
                                            },
                                            undefined,
                                          ]
                                        }
                                        testID="header-title"
                                      >
                                        <ThemedComponent
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <HeaderTitle
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            styles={
                                              Object {
                                                "root": Object {
                                                  "color": "#fff",
                                                  "fontFamily": undefined,
                                                  "fontSize": 20,
                                                  "fontWeight": "500",
                                                },
                                              }
                                            }
                                            testID="header-title"
                                          >
                                            <Text
                                              accessibilityTraits="header"
                                              allowFontScaling={true}
                                              numberOfLines={1}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                  Array [
                                                    null,
                                                    Object {
                                                      "textAlign": "center",
                                                    },
                                                    undefined,
                                                  ],
                                                ]
                                              }
                                              testID="header-title"
                                            >
                                              <ThemedComponent
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <Component
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  styles={
                                                    Object {
                                                      "root": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": undefined,
                                                        "fontSize": 16,
                                                        "fontWeight": "400",
                                                      },
                                                    }
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Text
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                        Array [
                                                          Object {
                                                            "color": "#fff",
                                                            "fontFamily": undefined,
                                                            "fontSize": 20,
                                                            "fontWeight": "500",
                                                          },
                                                          Array [
                                                            null,
                                                            Object {
                                                              "textAlign": "center",
                                                            },
                                                            undefined,
                                                          ],
                                                        ],
                                                      ]
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    />
                                                  </Text>
                                                </Component>
                                              </ThemedComponent>
                                            </Text>
                                          </HeaderTitle>
                                        </ThemedComponent>
                                      </HeaderTitle>
                                    </View>
                                  </View>
                                  <HeaderBackButton
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "marginRight": 16,
                                      }
                                    }
                                    testId="header-left"
                                    title={null}
                                  >
                                    <ThemedComponent
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <HeaderBackButton
                                        defaultStyles={Object {}}
                                        pressColorAndroid="rgba(0, 0, 0, .32)"
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        styles={
                                          Object {
                                            "androidButtonWrapper": Object {
                                              "backgroundColor": "transparent",
                                              "margin": 13,
                                            },
                                            "icon": Object {
                                              "backgroundColor": "transparent",
                                              "height": 24,
                                              "margin": 3,
                                              "resizeMode": "contain",
                                              "transform": Array [
                                                Object {
                                                  "scaleX": 1,
                                                },
                                              ],
                                              "width": 24,
                                            },
                                            "iconWithTitle": Object {},
                                            "title": Object {
                                              "color": "#fff",
                                              "fontSize": 17,
                                              "paddingRight": 10,
                                            },
                                            "wrapper": Object {
                                              "alignItems": "center",
                                              "backgroundColor": "transparent",
                                              "flexDirection": "row",
                                            },
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                        truncatedTitle="Back"
                                      >
                                        <View
                                          style={
                                            Object {
                                              "backgroundColor": "transparent",
                                              "margin": 13,
                                            }
                                          }
                                          testID="header-android-wrapper"
                                        >
                                          <View
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              }
                                            }
                                            testID="header-android-wrapper"
                                          >
                                            <NavigationActions>
                                              <ThemedComponent>
                                                <Component>
                                                  <TouchableItem
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <TouchableOpacity
                                                      accessibilityComponentType="button"
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessibilityTraits="button"
                                                      accessible={true}
                                                      activeOpacity={0.2}
                                                      borderless={true}
                                                      delayPressIn={0}
                                                      onPress={[Function]}
                                                      pressColor="rgba(0, 0, 0, .32)"
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginRight": 16,
                                                        }
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <AnimatedComponent
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                            },
                                                            Object {
                                                              "opacity": 1,
                                                            },
                                                          ]
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            accessibilityLabel="Go back"
                                                            accessibilityRole="button"
                                                            accessible={true}
                                                            isTVSelectable={true}
                                                            onResponderGrant={[Function]}
                                                            onResponderMove={[Function]}
                                                            onResponderRelease={[Function]}
                                                            onResponderTerminate={[Function]}
                                                            onResponderTerminationRequest={[Function]}
                                                            onStartShouldSetResponder={[Function]}
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "flexDirection": "row",
                                                                "marginRight": 16,
                                                                "opacity": 1,
                                                              }
                                                            }
                                                            testID="header-back"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <View
                                                                style={
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "backgroundColor": "transparent",
                                                                    "flexDirection": "row",
                                                                  }
                                                                }
                                                                testID="header-back-wrapper"
                                                              >
                                                                <Component
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 24,
                                                                        "margin": 3,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 24,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <Image
                                                                    fadeDuration={0}
                                                                    source="test-file-stub"
                                                                    style={
                                                                      Array [
                                                                        Object {
                                                                          "backgroundColor": "transparent",
                                                                          "height": 24,
                                                                          "margin": 3,
                                                                          "resizeMode": "contain",
                                                                          "transform": Array [
                                                                            Object {
                                                                              "scaleX": 1,
                                                                            },
                                                                          ],
                                                                          "width": 24,
                                                                        },
                                                                        false,
                                                                        Object {
                                                                          "tintColor": "#fff",
                                                                        },
                                                                      ]
                                                                    }
                                                                  />
                                                                </Component>
                                                              </View>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </AnimatedComponent>
                                                    </TouchableOpacity>
                                                  </TouchableItem>
                                                </Component>
                                              </ThemedComponent>
                                            </NavigationActions>
                                          </View>
                                        </View>
                                      </HeaderBackButton>
                                    </ThemedComponent>
                                  </HeaderBackButton>
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "bottom": 0,
                                          "flexDirection": "row",
                                          "marginLeft": 16,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        },
                                      ]
                                    }
                                    testID="header-right-container"
                                  >
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    />
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should handler rtl layout 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_plyo88p" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_plyo88p" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header>
            <ThemedComponent>
              <Header
                headerTitleAllowFontScaling={true}
                layoutPreset="left"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": -1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
              >
                <SafeAreaView
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 56,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 56,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <HeaderBackButton
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "marginRight": 16,
                                      }
                                    }
                                    testId="header-left"
                                    title={null}
                                  >
                                    <ThemedComponent
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <HeaderBackButton
                                        defaultStyles={Object {}}
                                        pressColorAndroid="rgba(0, 0, 0, .32)"
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        styles={
                                          Object {
                                            "androidButtonWrapper": Object {
                                              "backgroundColor": "transparent",
                                              "margin": 13,
                                            },
                                            "icon": Object {
                                              "backgroundColor": "transparent",
                                              "height": 24,
                                              "margin": 3,
                                              "resizeMode": "contain",
                                              "transform": Array [
                                                Object {
                                                  "scaleX": -1,
                                                },
                                              ],
                                              "width": 24,
                                            },
                                            "iconWithTitle": Object {},
                                            "title": Object {
                                              "color": "#fff",
                                              "fontSize": 17,
                                              "paddingRight": 10,
                                            },
                                            "wrapper": Object {
                                              "alignItems": "center",
                                              "backgroundColor": "transparent",
                                              "flexDirection": "row",
                                            },
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                        truncatedTitle="Back"
                                      >
                                        <View
                                          style={
                                            Object {
                                              "backgroundColor": "transparent",
                                              "margin": 13,
                                            }
                                          }
                                          testID="header-android-wrapper"
                                        >
                                          <View
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              }
                                            }
                                            testID="header-android-wrapper"
                                          >
                                            <NavigationActions>
                                              <ThemedComponent>
                                                <Component>
                                                  <TouchableItem
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <TouchableOpacity
                                                      accessibilityComponentType="button"
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessibilityTraits="button"
                                                      accessible={true}
                                                      activeOpacity={0.2}
                                                      borderless={true}
                                                      delayPressIn={0}
                                                      onPress={[Function]}
                                                      pressColor="rgba(0, 0, 0, .32)"
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginRight": 16,
                                                        }
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <AnimatedComponent
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                            },
                                                            Object {
                                                              "opacity": 1,
                                                            },
                                                          ]
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            accessibilityLabel="Go back"
                                                            accessibilityRole="button"
                                                            accessible={true}
                                                            isTVSelectable={true}
                                                            onResponderGrant={[Function]}
                                                            onResponderMove={[Function]}
                                                            onResponderRelease={[Function]}
                                                            onResponderTerminate={[Function]}
                                                            onResponderTerminationRequest={[Function]}
                                                            onStartShouldSetResponder={[Function]}
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "flexDirection": "row",
                                                                "marginRight": 16,
                                                                "opacity": 1,
                                                              }
                                                            }
                                                            testID="header-back"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <View
                                                                style={
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "backgroundColor": "transparent",
                                                                    "flexDirection": "row",
                                                                  }
                                                                }
                                                                testID="header-back-wrapper"
                                                              >
                                                                <Component
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 24,
                                                                        "margin": 3,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": -1,
                                                                          },
                                                                        ],
                                                                        "width": 24,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <Image
                                                                    fadeDuration={0}
                                                                    source="test-file-stub"
                                                                    style={
                                                                      Array [
                                                                        Object {
                                                                          "backgroundColor": "transparent",
                                                                          "height": 24,
                                                                          "margin": 3,
                                                                          "resizeMode": "contain",
                                                                          "transform": Array [
                                                                            Object {
                                                                              "scaleX": -1,
                                                                            },
                                                                          ],
                                                                          "width": 24,
                                                                        },
                                                                        false,
                                                                        Object {
                                                                          "tintColor": "#fff",
                                                                        },
                                                                      ]
                                                                    }
                                                                  />
                                                                </Component>
                                                              </View>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </AnimatedComponent>
                                                    </TouchableOpacity>
                                                  </TouchableItem>
                                                </Component>
                                              </ThemedComponent>
                                            </NavigationActions>
                                          </View>
                                        </View>
                                      </HeaderBackButton>
                                    </ThemedComponent>
                                  </HeaderBackButton>
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginHorizontal": 16,
                                        },
                                        Object {
                                          "justifyContent": "flex-start",
                                        },
                                        undefined,
                                        Object {},
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "flex-start",
                                          },
                                          undefined,
                                          Object {},
                                        ]
                                      }
                                    >
                                      <HeaderTitle
                                        allowFontScaling={true}
                                        style={
                                          Array [
                                            null,
                                            Object {
                                              "textAlign": "left",
                                            },
                                            undefined,
                                          ]
                                        }
                                        testID="header-title"
                                      >
                                        <ThemedComponent
                                          allowFontScaling={true}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "left",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <HeaderTitle
                                            allowFontScaling={true}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "left",
                                                },
                                                undefined,
                                              ]
                                            }
                                            styles={
                                              Object {
                                                "root": Object {
                                                  "color": "#fff",
                                                  "fontFamily": undefined,
                                                  "fontSize": 20,
                                                  "fontWeight": "500",
                                                },
                                              }
                                            }
                                            testID="header-title"
                                          >
                                            <Text
                                              accessibilityTraits="header"
                                              allowFontScaling={true}
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                  Array [
                                                    null,
                                                    Object {
                                                      "textAlign": "left",
                                                    },
                                                    undefined,
                                                  ],
                                                ]
                                              }
                                              testID="header-title"
                                            >
                                              <ThemedComponent
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "left",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <Component
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "left",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  styles={
                                                    Object {
                                                      "root": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": undefined,
                                                        "fontSize": 16,
                                                        "fontWeight": "400",
                                                      },
                                                    }
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Text
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                        Array [
                                                          Object {
                                                            "color": "#fff",
                                                            "fontFamily": undefined,
                                                            "fontSize": 20,
                                                            "fontWeight": "500",
                                                          },
                                                          Array [
                                                            null,
                                                            Object {
                                                              "textAlign": "left",
                                                            },
                                                            undefined,
                                                          ],
                                                        ],
                                                      ]
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "left",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    />
                                                  </Text>
                                                </Component>
                                              </ThemedComponent>
                                            </Text>
                                          </HeaderTitle>
                                        </ThemedComponent>
                                      </HeaderTitle>
                                    </View>
                                  </View>
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "bottom": 0,
                                          "flexDirection": "row",
                                          "marginLeft": 16,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        },
                                      ]
                                    }
                                    testID="header-right-container"
                                  >
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    />
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should not render a back button 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_p8e1hbm" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerLeft={null}
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_p8e1hbm" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerLeft={null}
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerLeft={null}
            title="Foo"
          >
            <ThemedComponent
              headerLeft={null}
              title="Foo"
            >
              <Header
                headerLeft={null}
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should not render a back button with custom button text 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_n6p03k1" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                backTitleVisible={true}
                headerBackTitle="Go Back"
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_n6p03k1" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  backTitleVisible={true}
                  headerBackTitle="Go Back"
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            backTitleVisible={true}
            headerBackTitle="Go Back"
            title="Foo"
          >
            <ThemedComponent
              backTitleVisible={true}
              headerBackTitle="Go Back"
              title="Foo"
            >
              <Header
                backTitleVisible={true}
                headerBackTitle="Go Back"
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      backTitleVisible={true}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title="Go Back"
                                    >
                                      <ThemedComponent
                                        backTitleVisible={true}
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title="Go Back"
                                      >
                                        <HeaderBackButton
                                          backTitleVisible={true}
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title="Go Back"
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go Back, back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go Back, back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go Back, back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go Back, back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go Back, back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    Object {
                                                                      "marginRight": 6,
                                                                    },
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      Object {
                                                                        "marginRight": 6,
                                                                      },
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                              <Text
                                                                accessible={false}
                                                                allowFontScaling={false}
                                                                numberOfLines={1}
                                                                onLayout={[Function]}
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "color": "#fff",
                                                                      "fontSize": 17,
                                                                      "paddingRight": 10,
                                                                    },
                                                                    false,
                                                                    undefined,
                                                                  ]
                                                                }
                                                                testID="header-back-title"
                                                              >
                                                                <Text
                                                                  accessible={false}
                                                                  allowFontScaling={false}
                                                                  numberOfLines={1}
                                                                  onLayout={[Function]}
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "color": "#fff",
                                                                        "fontSize": 17,
                                                                        "paddingRight": 10,
                                                                      },
                                                                      false,
                                                                      undefined,
                                                                    ]
                                                                  }
                                                                  testID="header-back-title"
                                                                >
                                                                  Go Back
                                                                </Text>
                                                              </Text>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should not render a left element 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_g9lg9oo" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerLeft={<Left />}
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_g9lg9oo" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerLeft={<Left />}
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerLeft={<Left />}
            title="Foo"
          >
            <ThemedComponent
              headerLeft={<Left />}
              title="Foo"
            >
              <Header
                headerLeft={<Left />}
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginHorizontal": 16,
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        undefined,
                                        Object {
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <HeaderTitle
                                        allowFontScaling={true}
                                        onLayout={[Function]}
                                        style={
                                          Array [
                                            null,
                                            Object {
                                              "textAlign": "center",
                                            },
                                            undefined,
                                          ]
                                        }
                                        testID="header-title"
                                      >
                                        <ThemedComponent
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <HeaderTitle
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            styles={
                                              Object {
                                                "root": Object {
                                                  "color": "#fff",
                                                  "fontFamily": undefined,
                                                  "fontSize": 20,
                                                  "fontWeight": "500",
                                                },
                                              }
                                            }
                                            testID="header-title"
                                          >
                                            <Text
                                              accessibilityTraits="header"
                                              allowFontScaling={true}
                                              numberOfLines={1}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                  Array [
                                                    null,
                                                    Object {
                                                      "textAlign": "center",
                                                    },
                                                    undefined,
                                                  ],
                                                ]
                                              }
                                              testID="header-title"
                                            >
                                              <ThemedComponent
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <Component
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  styles={
                                                    Object {
                                                      "root": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": undefined,
                                                        "fontSize": 16,
                                                        "fontWeight": "400",
                                                      },
                                                    }
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Text
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                        Array [
                                                          Object {
                                                            "color": "#fff",
                                                            "fontFamily": undefined,
                                                            "fontSize": 20,
                                                            "fontWeight": "500",
                                                          },
                                                          Array [
                                                            null,
                                                            Object {
                                                              "textAlign": "center",
                                                            },
                                                            undefined,
                                                          ],
                                                        ],
                                                      ]
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      Foo
                                                    </Text>
                                                  </Text>
                                                </Component>
                                              </ThemedComponent>
                                            </Text>
                                          </HeaderTitle>
                                        </ThemedComponent>
                                      </HeaderTitle>
                                    </View>
                                  </View>
                                  <Left>
                                    <Text
                                      testID="left-element"
                                    >
                                      <Text
                                        testID="left-element"
                                      >
                                        Left
                                      </Text>
                                    </Text>
                                  </Left>
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "bottom": 0,
                                          "flexDirection": "row",
                                          "marginLeft": 16,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        },
                                      ]
                                    }
                                    testID="header-right-container"
                                  >
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    />
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should not render a left element with custom styles 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_mxaasif" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerLeftContainerStyle={
                  Object {
                    "backgroundColor": "orange",
                  }
                }
                headerRight={<Right />}
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_mxaasif" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerLeftContainerStyle={
                    Object {
                      "backgroundColor": "orange",
                    }
                  }
                  headerRight={<Right />}
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerLeftContainerStyle={
              Object {
                "backgroundColor": "orange",
              }
            }
            headerRight={<Right />}
            title="Foo"
          >
            <ThemedComponent
              headerLeftContainerStyle={
                Object {
                  "backgroundColor": "orange",
                }
              }
              headerRight={<Right />}
              title="Foo"
            >
              <Header
                headerLeftContainerStyle={
                  Object {
                    "backgroundColor": "orange",
                  }
                }
                headerRight={<Right />}
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          },
                                          Object {
                                            "backgroundColor": "orange",
                                          },
                                        ]
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            },
                                            Object {
                                              "backgroundColor": "orange",
                                            },
                                          ]
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Array [
                                              Object {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                                "marginRight": 16,
                                              },
                                              Object {
                                                "backgroundColor": "orange",
                                              },
                                            ]
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Array [
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      },
                                                      Object {
                                                        "backgroundColor": "orange",
                                                      },
                                                    ]
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Array [
                                                        Object {
                                                          "alignItems": "center",
                                                          "flexDirection": "row",
                                                          "marginRight": 16,
                                                        },
                                                        Object {
                                                          "backgroundColor": "orange",
                                                        },
                                                      ]
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Array [
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                            },
                                                            Object {
                                                              "backgroundColor": "orange",
                                                            },
                                                          ],
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "backgroundColor": "orange",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "backgroundColor": "orange",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      >
                                        <Right>
                                          <Text
                                            testID="right-element"
                                          >
                                            <Text
                                              testID="right-element"
                                            >
                                              Right
                                            </Text>
                                          </Text>
                                        </Right>
                                      </View>
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should not render a right element 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_iwjz1xs" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerRight={<Right />}
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_iwjz1xs" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerRight={<Right />}
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerRight={<Right />}
            title="Foo"
          >
            <ThemedComponent
              headerRight={<Right />}
              title="Foo"
            >
              <Header
                headerRight={<Right />}
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      >
                                        <Right>
                                          <Text
                                            testID="right-element"
                                          >
                                            <Text
                                              testID="right-element"
                                            >
                                              Right
                                            </Text>
                                          </Text>
                                        </Right>
                                      </View>
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should not render a right element with custom styles 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_ghb2bpl" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerRight={<Right />}
                headerRightContainerStyle={
                  Object {
                    "backgroundColor": "yellow",
                  }
                }
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_ghb2bpl" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerRight={<Right />}
                  headerRightContainerStyle={
                    Object {
                      "backgroundColor": "yellow",
                    }
                  }
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerRight={<Right />}
            headerRightContainerStyle={
              Object {
                "backgroundColor": "yellow",
              }
            }
            title="Foo"
          >
            <ThemedComponent
              headerRight={<Right />}
              headerRightContainerStyle={
                Object {
                  "backgroundColor": "yellow",
                }
              }
              title="Foo"
            >
              <Header
                headerRight={<Right />}
                headerRightContainerStyle={
                  Object {
                    "backgroundColor": "yellow",
                  }
                }
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                          Object {
                                            "backgroundColor": "yellow",
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                            Object {
                                              "backgroundColor": "yellow",
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      >
                                        <Right>
                                          <Text
                                            testID="right-element"
                                          >
                                            <Text
                                              testID="right-element"
                                            >
                                              Right
                                            </Text>
                                          </Text>
                                        </Right>
                                      </View>
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should not render anything when header prop is null 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_6b2ogju" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                header={null}
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_6b2ogju" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  header={null}
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            header={null}
            title="Foo"
          >
            <ThemedComponent
              header={null}
              title="Foo"
            >
              <Header
                header={null}
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              />
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should only render back image 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_ukkcpkz" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_ukkcpkz" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header>
            <ThemedComponent>
              <Header
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      />
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should only render back image and custom truncated title 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_1ay5upu" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerRight={<Right />}
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_1ay5upu" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerRight={<Right />}
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerRight={<Right />}
            title="Foo"
          >
            <ThemedComponent
              headerRight={<Right />}
              title="Foo"
            >
              <Header
                headerRight={<Right />}
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <ThemedComponent
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              testID="header-title"
                                            >
                                              <ThemedComponent
                                                allowFontScaling={true}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    null,
                                                    Object {
                                                      "textAlign": "center",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <HeaderTitle
                                                  allowFontScaling={true}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                  styles={
                                                    Object {
                                                      "root": Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                    }
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Text
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <ThemedComponent
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "#fff",
                                                            "fontFamily": undefined,
                                                            "fontSize": 20,
                                                            "fontWeight": "500",
                                                          },
                                                          Array [
                                                            null,
                                                            Object {
                                                              "textAlign": "center",
                                                            },
                                                            undefined,
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <ThemedComponent
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        <ThemedComponent
                                                          accessibilityTraits="header"
                                                          allowFontScaling={true}
                                                          numberOfLines={1}
                                                          onLayout={[Function]}
                                                          style={
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ]
                                                          }
                                                          testID="header-title"
                                                        >
                                                          <Component
                                                            accessibilityTraits="header"
                                                            allowFontScaling={true}
                                                            numberOfLines={1}
                                                            onLayout={[Function]}
                                                            style={
                                                              Array [
                                                                Object {
                                                                  "color": "#fff",
                                                                  "fontFamily": undefined,
                                                                  "fontSize": 20,
                                                                  "fontWeight": "500",
                                                                },
                                                                Array [
                                                                  null,
                                                                  Object {
                                                                    "textAlign": "center",
                                                                  },
                                                                  undefined,
                                                                ],
                                                              ]
                                                            }
                                                            styles={
                                                              Object {
                                                                "root": Object {
                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                  "fontFamily": undefined,
                                                                  "fontSize": 16,
                                                                  "fontWeight": "400",
                                                                },
                                                              }
                                                            }
                                                            testID="header-title"
                                                          >
                                                            <Text
                                                              accessibilityTraits="header"
                                                              allowFontScaling={true}
                                                              numberOfLines={1}
                                                              onLayout={[Function]}
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "color": "rgba(0, 0, 0, 0.87)",
                                                                    "fontFamily": undefined,
                                                                    "fontSize": 16,
                                                                    "fontWeight": "400",
                                                                  },
                                                                  Array [
                                                                    Object {
                                                                      "color": "#fff",
                                                                      "fontFamily": undefined,
                                                                      "fontSize": 20,
                                                                      "fontWeight": "500",
                                                                    },
                                                                    Array [
                                                                      null,
                                                                      Object {
                                                                        "textAlign": "center",
                                                                      },
                                                                      undefined,
                                                                    ],
                                                                  ],
                                                                ]
                                                              }
                                                              testID="header-title"
                                                            >
                                                              <Text
                                                                accessibilityTraits="header"
                                                                allowFontScaling={true}
                                                                numberOfLines={1}
                                                                onLayout={[Function]}
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                                      "fontFamily": undefined,
                                                                      "fontSize": 16,
                                                                      "fontWeight": "400",
                                                                    },
                                                                    Array [
                                                                      Object {
                                                                        "color": "#fff",
                                                                        "fontFamily": undefined,
                                                                        "fontSize": 20,
                                                                        "fontWeight": "500",
                                                                      },
                                                                      Array [
                                                                        null,
                                                                        Object {
                                                                          "textAlign": "center",
                                                                        },
                                                                        undefined,
                                                                      ],
                                                                    ],
                                                                  ]
                                                                }
                                                                testID="header-title"
                                                              >
                                                                Foo
                                                              </Text>
                                                            </Text>
                                                          </Component>
                                                        </ThemedComponent>
                                                      </ThemedComponent>
                                                    </ThemedComponent>
                                                  </Text>
                                                </HeaderTitle>
                                              </ThemedComponent>
                                            </ThemedComponent>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                      width={75}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                        width={75}
                                      >
                                        <ThemedComponent
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          width={75}
                                        >
                                          <ThemedComponent
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                                "marginRight": 16,
                                              }
                                            }
                                            testId="header-left"
                                            title={null}
                                            width={75}
                                          >
                                            <HeaderBackButton
                                              defaultStyles={Object {}}
                                              pressColorAndroid="rgba(0, 0, 0, .32)"
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "flexDirection": "row",
                                                  "marginRight": 16,
                                                }
                                              }
                                              styles={
                                                Object {
                                                  "androidButtonWrapper": Object {
                                                    "backgroundColor": "transparent",
                                                    "margin": 13,
                                                  },
                                                  "icon": Object {
                                                    "backgroundColor": "transparent",
                                                    "height": 21,
                                                    "marginLeft": 9,
                                                    "marginRight": 22,
                                                    "marginVertical": 12,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 13,
                                                  },
                                                  "iconWithTitle": Object {
                                                    "marginRight": 6,
                                                  },
                                                  "title": Object {
                                                    "color": "#fff",
                                                    "fontSize": 17,
                                                    "paddingRight": 10,
                                                  },
                                                  "wrapper": Object {
                                                    "alignItems": "center",
                                                    "backgroundColor": "transparent",
                                                    "flexDirection": "row",
                                                  },
                                                }
                                              }
                                              testId="header-left"
                                              title={null}
                                              truncatedTitle="Back"
                                              width={75}
                                            >
                                              <NavigationActions>
                                                <ThemedComponent>
                                                  <ThemedComponent>
                                                    <ThemedComponent>
                                                      <Component>
                                                        <TouchableItem
                                                          accessibilityComponentType="button"
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessibilityTraits="button"
                                                          accessible={true}
                                                          borderless={true}
                                                          delayPressIn={0}
                                                          onPress={[Function]}
                                                          pressColor="rgba(0, 0, 0, .32)"
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <TouchableOpacity
                                                            accessibilityComponentType="button"
                                                            accessibilityLabel="Go back"
                                                            accessibilityRole="button"
                                                            accessibilityTraits="button"
                                                            accessible={true}
                                                            activeOpacity={0.2}
                                                            borderless={true}
                                                            delayPressIn={0}
                                                            hitSlop={
                                                              Object {
                                                                "bottom": 10,
                                                                "left": 10,
                                                                "right": 10,
                                                                "top": 10,
                                                              }
                                                            }
                                                            onPress={[Function]}
                                                            pressColor="rgba(0, 0, 0, .32)"
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "flexDirection": "row",
                                                                "marginRight": 16,
                                                              }
                                                            }
                                                            testID="header-back"
                                                          >
                                                            <AnimatedComponent
                                                              accessibilityLabel="Go back"
                                                              accessibilityRole="button"
                                                              accessible={true}
                                                              hitSlop={
                                                                Object {
                                                                  "bottom": 10,
                                                                  "left": 10,
                                                                  "right": 10,
                                                                  "top": 10,
                                                                }
                                                              }
                                                              isTVSelectable={true}
                                                              onResponderGrant={[Function]}
                                                              onResponderMove={[Function]}
                                                              onResponderRelease={[Function]}
                                                              onResponderTerminate={[Function]}
                                                              onResponderTerminationRequest={[Function]}
                                                              onStartShouldSetResponder={[Function]}
                                                              style={
                                                                Array [
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "flexDirection": "row",
                                                                    "marginRight": 16,
                                                                  },
                                                                  Object {
                                                                    "opacity": 1,
                                                                  },
                                                                ]
                                                              }
                                                              testID="header-back"
                                                            >
                                                              <View
                                                                accessibilityLabel="Go back"
                                                                accessibilityRole="button"
                                                                accessible={true}
                                                                hitSlop={
                                                                  Object {
                                                                    "bottom": 10,
                                                                    "left": 10,
                                                                    "right": 10,
                                                                    "top": 10,
                                                                  }
                                                                }
                                                                isTVSelectable={true}
                                                                onResponderGrant={[Function]}
                                                                onResponderMove={[Function]}
                                                                onResponderRelease={[Function]}
                                                                onResponderTerminate={[Function]}
                                                                onResponderTerminationRequest={[Function]}
                                                                onStartShouldSetResponder={[Function]}
                                                                style={
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "flexDirection": "row",
                                                                    "marginRight": 16,
                                                                    "opacity": 1,
                                                                  }
                                                                }
                                                                testID="header-back"
                                                              >
                                                                <View
                                                                  accessibilityLabel="Go back"
                                                                  accessibilityRole="button"
                                                                  accessible={true}
                                                                  hitSlop={
                                                                    Object {
                                                                      "bottom": 10,
                                                                      "left": 10,
                                                                      "right": 10,
                                                                      "top": 10,
                                                                    }
                                                                  }
                                                                  isTVSelectable={true}
                                                                  onResponderGrant={[Function]}
                                                                  onResponderMove={[Function]}
                                                                  onResponderRelease={[Function]}
                                                                  onResponderTerminate={[Function]}
                                                                  onResponderTerminationRequest={[Function]}
                                                                  onStartShouldSetResponder={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "alignItems": "center",
                                                                      "flexDirection": "row",
                                                                      "marginRight": 16,
                                                                      "opacity": 1,
                                                                    }
                                                                  }
                                                                  testID="header-back"
                                                                >
                                                                  <View
                                                                    style={
                                                                      Object {
                                                                        "alignItems": "center",
                                                                        "backgroundColor": "transparent",
                                                                        "flexDirection": "row",
                                                                      }
                                                                    }
                                                                    testID="header-back-wrapper"
                                                                  >
                                                                    <View
                                                                      style={
                                                                        Object {
                                                                          "alignItems": "center",
                                                                          "backgroundColor": "transparent",
                                                                          "flexDirection": "row",
                                                                        }
                                                                      }
                                                                      testID="header-back-wrapper"
                                                                    >
                                                                      <Component
                                                                        fadeDuration={0}
                                                                        source="test-file-stub"
                                                                        style={
                                                                          Array [
                                                                            Object {
                                                                              "backgroundColor": "transparent",
                                                                              "height": 21,
                                                                              "marginLeft": 9,
                                                                              "marginRight": 22,
                                                                              "marginVertical": 12,
                                                                              "resizeMode": "contain",
                                                                              "transform": Array [
                                                                                Object {
                                                                                  "scaleX": 1,
                                                                                },
                                                                              ],
                                                                              "width": 13,
                                                                            },
                                                                            false,
                                                                            Object {
                                                                              "tintColor": "#fff",
                                                                            },
                                                                          ]
                                                                        }
                                                                      >
                                                                        <Image
                                                                          fadeDuration={0}
                                                                          source="test-file-stub"
                                                                          style={
                                                                            Array [
                                                                              Object {
                                                                                "backgroundColor": "transparent",
                                                                                "height": 21,
                                                                                "marginLeft": 9,
                                                                                "marginRight": 22,
                                                                                "marginVertical": 12,
                                                                                "resizeMode": "contain",
                                                                                "transform": Array [
                                                                                  Object {
                                                                                    "scaleX": 1,
                                                                                  },
                                                                                ],
                                                                                "width": 13,
                                                                              },
                                                                              false,
                                                                              Object {
                                                                                "tintColor": "#fff",
                                                                              },
                                                                            ]
                                                                          }
                                                                        />
                                                                      </Component>
                                                                    </View>
                                                                  </View>
                                                                </View>
                                                              </View>
                                                            </AnimatedComponent>
                                                          </TouchableOpacity>
                                                        </TouchableItem>
                                                      </Component>
                                                    </ThemedComponent>
                                                  </ThemedComponent>
                                                </ThemedComponent>
                                              </NavigationActions>
                                            </HeaderBackButton>
                                          </ThemedComponent>
                                        </ThemedComponent>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      >
                                        <Right>
                                          <Text
                                            testID="right-element"
                                          >
                                            <Text
                                              testID="right-element"
                                            >
                                              Right
                                            </Text>
                                          </Text>
                                        </Right>
                                      </View>
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should only render back image and title 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_tnc18by" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_tnc18by" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            title="Foo"
          >
            <ThemedComponent
              title="Foo"
            >
              <Header
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should prefer headerTitle prop over title prop 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_6s8x8yl" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerTitle="Bar"
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_6s8x8yl" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerTitle="Bar"
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerTitle="Bar"
            title="Foo"
          >
            <ThemedComponent
              headerTitle="Bar"
              title="Foo"
            >
              <Header
                headerTitle="Bar"
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Bar
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should render a header background 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_46z6hwq" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerBackground={[Function]}
                headerTitle="Bar"
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_46z6hwq" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerBackground={[Function]}
                  headerTitle="Bar"
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerBackground={[Function]}
            headerTitle="Bar"
            title="Foo"
          >
            <ThemedComponent
              headerBackground={[Function]}
              headerTitle="Bar"
              title="Foo"
            >
              <Header
                headerBackground={[Function]}
                headerTitle="Bar"
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <Component
                            headerBackground={[Function]}
                            headerTitle="Bar"
                            headerTitleAllowFontScaling={true}
                            layoutPreset="center"
                            source={
                              Object {
                                "uri": "https://picsum.photos/1000x100",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            styles={
                              Object {
                                "flexOne": Object {
                                  "flex": 1,
                                },
                                "header": Object {
                                  "alignItems": "center",
                                  "bottom": 0,
                                  "flexDirection": "row",
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                "iconMask": Object {
                                  "alignSelf": "center",
                                  "height": 23,
                                  "marginLeft": 8.5,
                                  "marginTop": -2.5,
                                  "resizeMode": "contain",
                                  "transform": Array [
                                    Object {
                                      "scaleX": 1,
                                    },
                                  ],
                                  "width": 14.5,
                                },
                                "iconMaskContainer": Object {
                                  "flex": 1,
                                  "flexDirection": "row",
                                  "justifyContent": "center",
                                },
                                "iconMaskFillerRect": Object {
                                  "backgroundColor": "#d8d8d8",
                                  "flex": 1,
                                  "marginLeft": -5,
                                },
                                "item": Object {
                                  "backgroundColor": "transparent",
                                },
                                "left": Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "marginRight": 16,
                                },
                                "right": Object {
                                  "alignItems": "center",
                                  "bottom": 0,
                                  "flexDirection": "row",
                                  "marginLeft": 16,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                "root": Object {
                                  "backgroundColor": "#3f51b5",
                                  "shadowColor": "#000",
                                  "shadowOffset": Object {
                                    "height": 3,
                                    "width": 0,
                                  },
                                  "shadowOpacity": 0.24,
                                  "shadowRadius": 4,
                                },
                                "title": Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "marginHorizontal": 16,
                                },
                                "transparentContainer": Object {
                                  "borderBottomColor": "transparent",
                                  "borderBottomWidth": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "shadowColor": "#000",
                                  "shadowOffset": Object {
                                    "height": -1,
                                    "width": 0,
                                  },
                                  "shadowOpacity": 0.24,
                                  "shadowRadius": 0,
                                  "top": 0,
                                },
                                "wrapper": Object {
                                  "paddingHorizontal": 16,
                                },
                              }
                            }
                            testID="header-bg"
                            title="Foo"
                          >
                            <Image
                              headerBackground={[Function]}
                              headerTitle="Bar"
                              headerTitleAllowFontScaling={true}
                              layoutPreset="center"
                              source={
                                Object {
                                  "uri": "https://picsum.photos/1000x100",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              styles={
                                Object {
                                  "flexOne": Object {
                                    "flex": 1,
                                  },
                                  "header": Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  "iconMask": Object {
                                    "alignSelf": "center",
                                    "height": 23,
                                    "marginLeft": 8.5,
                                    "marginTop": -2.5,
                                    "resizeMode": "contain",
                                    "transform": Array [
                                      Object {
                                        "scaleX": 1,
                                      },
                                    ],
                                    "width": 14.5,
                                  },
                                  "iconMaskContainer": Object {
                                    "flex": 1,
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                  },
                                  "iconMaskFillerRect": Object {
                                    "backgroundColor": "#d8d8d8",
                                    "flex": 1,
                                    "marginLeft": -5,
                                  },
                                  "item": Object {
                                    "backgroundColor": "transparent",
                                  },
                                  "left": Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                  },
                                  "right": Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "marginLeft": 16,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  "root": Object {
                                    "backgroundColor": "#3f51b5",
                                    "shadowColor": "#000",
                                    "shadowOffset": Object {
                                      "height": 3,
                                      "width": 0,
                                    },
                                    "shadowOpacity": 0.24,
                                    "shadowRadius": 4,
                                  },
                                  "title": Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginHorizontal": 16,
                                  },
                                  "transparentContainer": Object {
                                    "borderBottomColor": "transparent",
                                    "borderBottomWidth": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "shadowColor": "#000",
                                    "shadowOffset": Object {
                                      "height": -1,
                                      "width": 0,
                                    },
                                    "shadowOpacity": 0.24,
                                    "shadowRadius": 0,
                                    "top": 0,
                                  },
                                  "wrapper": Object {
                                    "paddingHorizontal": 16,
                                  },
                                }
                              }
                              testID="header-bg"
                              title="Foo"
                            />
                          </Component>
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Bar
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should render back button and title with tint color 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_17xvko8" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                backTitleVisible={true}
                headerBackTitle="Go Back"
                headerTintColor="yellow"
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_17xvko8" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  backTitleVisible={true}
                  headerBackTitle="Go Back"
                  headerTintColor="yellow"
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            backTitleVisible={true}
            headerBackTitle="Go Back"
            headerTintColor="yellow"
            title="Foo"
          >
            <ThemedComponent
              backTitleVisible={true}
              headerBackTitle="Go Back"
              headerTintColor="yellow"
              title="Foo"
            >
              <Header
                backTitleVisible={true}
                headerBackTitle="Go Back"
                headerTintColor="yellow"
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              Object {
                                                "color": "yellow",
                                              },
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                Object {
                                                  "color": "yellow",
                                                },
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  Object {
                                                    "color": "yellow",
                                                  },
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      Object {
                                                        "color": "yellow",
                                                      },
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        Object {
                                                          "color": "yellow",
                                                        },
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          Object {
                                                            "color": "yellow",
                                                          },
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "yellow",
                                                              },
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "yellow",
                                                                },
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      backTitleVisible={true}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      tintColor="yellow"
                                      title="Go Back"
                                    >
                                      <ThemedComponent
                                        backTitleVisible={true}
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        tintColor="yellow"
                                        title="Go Back"
                                      >
                                        <HeaderBackButton
                                          backTitleVisible={true}
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          tintColor="yellow"
                                          title="Go Back"
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go Back, back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go Back, back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go Back, back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go Back, back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go Back, back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    Object {
                                                                      "marginRight": 6,
                                                                    },
                                                                    Object {
                                                                      "tintColor": "yellow",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      Object {
                                                                        "marginRight": 6,
                                                                      },
                                                                      Object {
                                                                        "tintColor": "yellow",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                              <Text
                                                                accessible={false}
                                                                allowFontScaling={false}
                                                                numberOfLines={1}
                                                                onLayout={[Function]}
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "color": "#fff",
                                                                      "fontSize": 17,
                                                                      "paddingRight": 10,
                                                                    },
                                                                    Object {
                                                                      "color": "yellow",
                                                                    },
                                                                    undefined,
                                                                  ]
                                                                }
                                                                testID="header-back-title"
                                                              >
                                                                <Text
                                                                  accessible={false}
                                                                  allowFontScaling={false}
                                                                  numberOfLines={1}
                                                                  onLayout={[Function]}
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "color": "#fff",
                                                                        "fontSize": 17,
                                                                        "paddingRight": 10,
                                                                      },
                                                                      Object {
                                                                        "color": "yellow",
                                                                      },
                                                                      undefined,
                                                                    ]
                                                                  }
                                                                  testID="header-back-title"
                                                                >
                                                                  Go Back
                                                                </Text>
                                                              </Text>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should render back button and title with tint color 2`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_17xvko8" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                backTitleVisible={true}
                headerBackTitle="Go Back"
                headerTintColor="yellow"
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_17xvko8" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  backTitleVisible={true}
                  headerBackTitle="Go Back"
                  headerTintColor="yellow"
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            backTitleVisible={true}
            headerBackTitle="Go Back"
            headerTintColor="yellow"
            title="Foo"
          >
            <ThemedComponent
              backTitleVisible={true}
              headerBackTitle="Go Back"
              headerTintColor="yellow"
              title="Foo"
            >
              <Header
                backTitleVisible={true}
                headerBackTitle="Go Back"
                headerTintColor="yellow"
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              Object {
                                                "color": "yellow",
                                              },
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                Object {
                                                  "color": "yellow",
                                                },
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  Object {
                                                    "color": "yellow",
                                                  },
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      Object {
                                                        "color": "yellow",
                                                      },
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        Object {
                                                          "color": "yellow",
                                                        },
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          Object {
                                                            "color": "yellow",
                                                          },
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "yellow",
                                                              },
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                Object {
                                                                  "color": "yellow",
                                                                },
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      backTitleVisible={true}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      tintColor="yellow"
                                      title="Go Back"
                                    >
                                      <ThemedComponent
                                        backTitleVisible={true}
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        tintColor="yellow"
                                        title="Go Back"
                                      >
                                        <HeaderBackButton
                                          backTitleVisible={true}
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          tintColor="yellow"
                                          title="Go Back"
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go Back, back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go Back, back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go Back, back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go Back, back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go Back, back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    Object {
                                                                      "marginRight": 6,
                                                                    },
                                                                    Object {
                                                                      "tintColor": "yellow",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      Object {
                                                                        "marginRight": 6,
                                                                      },
                                                                      Object {
                                                                        "tintColor": "yellow",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                              <Text
                                                                accessible={false}
                                                                allowFontScaling={false}
                                                                numberOfLines={1}
                                                                onLayout={[Function]}
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "color": "#fff",
                                                                      "fontSize": 17,
                                                                      "paddingRight": 10,
                                                                    },
                                                                    Object {
                                                                      "color": "yellow",
                                                                    },
                                                                    undefined,
                                                                  ]
                                                                }
                                                                testID="header-back-title"
                                                              >
                                                                <Text
                                                                  accessible={false}
                                                                  allowFontScaling={false}
                                                                  numberOfLines={1}
                                                                  onLayout={[Function]}
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "color": "#fff",
                                                                        "fontSize": 17,
                                                                        "paddingRight": 10,
                                                                      },
                                                                      Object {
                                                                        "color": "yellow",
                                                                      },
                                                                      undefined,
                                                                    ]
                                                                  }
                                                                  testID="header-back-title"
                                                                >
                                                                  Go Back
                                                                </Text>
                                                              </Text>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should render custom title component 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_3xx02mp" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerTitle={<Right />}
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_3xx02mp" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerTitle={<Right />}
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerTitle={<Right />}
          >
            <ThemedComponent
              headerTitle={<Right />}
            >
              <Header
                headerTitle={<Right />}
                headerTitleAllowFontScaling={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3f51b5",
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3f51b5",
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": 3,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 4,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#3f51b5",
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": 3,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 4,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <Right>
                                      <Text
                                        testID="right-element"
                                      >
                                        <Text
                                          testID="right-element"
                                        >
                                          Right
                                        </Text>
                                      </Text>
                                    </Right>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;

exports[`Header should render transparent Header 1`] = `
<BlueBaseApp>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Header",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderBackButton",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "HeaderTitle",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonSchema" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonSchema",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "NavigationActions",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Text",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_t65e4m7" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {},
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Header
                headerTransparent={true}
                title="Foo"
              />,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Header",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderBackButton",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "HeaderTitle",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonSchema" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonSchema",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "NavigationActions",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Text",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_t65e4m7" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Header
                  headerTransparent={true}
                  title="Foo"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Header
            headerTransparent={true}
            title="Foo"
          >
            <ThemedComponent
              headerTransparent={true}
              title="Foo"
            >
              <Header
                headerTitleAllowFontScaling={true}
                headerTransparent={true}
                layoutPreset="center"
                styles={
                  Object {
                    "flexOne": Object {
                      "flex": 1,
                    },
                    "header": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "iconMask": Object {
                      "alignSelf": "center",
                      "height": 23,
                      "marginLeft": 8.5,
                      "marginTop": -2.5,
                      "resizeMode": "contain",
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                      "width": 14.5,
                    },
                    "iconMaskContainer": Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    "iconMaskFillerRect": Object {
                      "backgroundColor": "#d8d8d8",
                      "flex": 1,
                      "marginLeft": -5,
                    },
                    "item": Object {
                      "backgroundColor": "transparent",
                    },
                    "left": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginRight": 16,
                    },
                    "right": Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "flexDirection": "row",
                      "marginLeft": 16,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    "root": Object {
                      "backgroundColor": "#3f51b5",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 4,
                    },
                    "title": Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 16,
                    },
                    "transparentContainer": Object {
                      "borderBottomColor": "transparent",
                      "borderBottomWidth": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": -1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 0,
                      "top": 0,
                    },
                    "wrapper": Object {
                      "paddingHorizontal": 16,
                    },
                  }
                }
                title="Foo"
              >
                <SafeAreaView
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "borderBottomColor": "transparent",
                        "borderBottomWidth": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": -1,
                          "width": 0,
                        },
                        "shadowOpacity": 0.24,
                        "shadowRadius": 0,
                        "top": 0,
                      },
                      undefined,
                    ]
                  }
                >
                  <_class
                    onLayout={[Function]}
                    style={
                      Array [
                        Object {
                          "borderBottomColor": "transparent",
                          "borderBottomWidth": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "shadowColor": "#000",
                          "shadowOffset": Object {
                            "height": -1,
                            "width": 0,
                          },
                          "shadowOpacity": 0.24,
                          "shadowRadius": 0,
                          "top": 0,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTSafeAreaView
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "borderBottomColor": "transparent",
                            "borderBottomWidth": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "shadowColor": "#000",
                            "shadowOffset": Object {
                              "height": -1,
                              "width": 0,
                            },
                            "shadowOpacity": 0.24,
                            "shadowRadius": 0,
                            "top": 0,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 16,
                            },
                            Object {
                              "height": 44,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 16,
                              },
                              Object {
                                "height": 44,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <MaskedViewIOS
                                maskElement={
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <Component
                                      source="test-file-stub"
                                      style={
                                        Object {
                                          "alignSelf": "center",
                                          "height": 23,
                                          "marginLeft": 8.5,
                                          "marginTop": -2.5,
                                          "resizeMode": "contain",
                                          "transform": Array [
                                            Object {
                                              "scaleX": 1,
                                            },
                                          ],
                                          "width": 14.5,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        Object {
                                          "backgroundColor": "#d8d8d8",
                                          "flex": 1,
                                          "marginLeft": -5,
                                        }
                                      }
                                    />
                                  </View>
                                }
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "flexDirection": "row",
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              >
                                <_class
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flexDirection": "row",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <RCTMaskedView
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "bottom": 0,
                                        "flexDirection": "row",
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      pointerEvents="none"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        pointerEvents="none"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Component
                                              source="test-file-stub"
                                              style={
                                                Object {
                                                  "alignSelf": "center",
                                                  "height": 23,
                                                  "marginLeft": 8.5,
                                                  "marginTop": -2.5,
                                                  "resizeMode": "contain",
                                                  "transform": Array [
                                                    Object {
                                                      "scaleX": 1,
                                                    },
                                                  ],
                                                  "width": 14.5,
                                                }
                                              }
                                            >
                                              <Image
                                                source="test-file-stub"
                                                style={
                                                  Object {
                                                    "alignSelf": "center",
                                                    "height": 23,
                                                    "marginLeft": 8.5,
                                                    "marginTop": -2.5,
                                                    "resizeMode": "contain",
                                                    "transform": Array [
                                                      Object {
                                                        "scaleX": 1,
                                                      },
                                                    ],
                                                    "width": 14.5,
                                                  }
                                                }
                                              />
                                            </Component>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#d8d8d8",
                                                  "flex": 1,
                                                  "marginLeft": -5,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "#d8d8d8",
                                                    "flex": 1,
                                                    "marginLeft": -5,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginHorizontal": 16,
                                          },
                                          Object {
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                          Object {
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                          },
                                        ]
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginHorizontal": 16,
                                            },
                                            Object {
                                              "justifyContent": "center",
                                            },
                                            undefined,
                                            Object {
                                              "left": 0,
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                          ]
                                        }
                                      >
                                        <HeaderTitle
                                          allowFontScaling={true}
                                          onLayout={[Function]}
                                          style={
                                            Array [
                                              null,
                                              Object {
                                                "textAlign": "center",
                                              },
                                              undefined,
                                            ]
                                          }
                                          testID="header-title"
                                        >
                                          <ThemedComponent
                                            allowFontScaling={true}
                                            onLayout={[Function]}
                                            style={
                                              Array [
                                                null,
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="header-title"
                                          >
                                            <HeaderTitle
                                              allowFontScaling={true}
                                              onLayout={[Function]}
                                              style={
                                                Array [
                                                  null,
                                                  Object {
                                                    "textAlign": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "root": Object {
                                                    "color": "#fff",
                                                    "fontFamily": undefined,
                                                    "fontSize": 20,
                                                    "fontWeight": "500",
                                                  },
                                                }
                                              }
                                              testID="header-title"
                                            >
                                              <Text
                                                accessibilityTraits="header"
                                                allowFontScaling={true}
                                                numberOfLines={1}
                                                onLayout={[Function]}
                                                style={
                                                  Array [
                                                    Object {
                                                      "color": "#fff",
                                                      "fontFamily": undefined,
                                                      "fontSize": 20,
                                                      "fontWeight": "500",
                                                    },
                                                    Array [
                                                      null,
                                                      Object {
                                                        "textAlign": "center",
                                                      },
                                                      undefined,
                                                    ],
                                                  ]
                                                }
                                                testID="header-title"
                                              >
                                                <ThemedComponent
                                                  accessibilityTraits="header"
                                                  allowFontScaling={true}
                                                  numberOfLines={1}
                                                  onLayout={[Function]}
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#fff",
                                                        "fontFamily": undefined,
                                                        "fontSize": 20,
                                                        "fontWeight": "500",
                                                      },
                                                      Array [
                                                        null,
                                                        Object {
                                                          "textAlign": "center",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="header-title"
                                                >
                                                  <Component
                                                    accessibilityTraits="header"
                                                    allowFontScaling={true}
                                                    numberOfLines={1}
                                                    onLayout={[Function]}
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#fff",
                                                          "fontFamily": undefined,
                                                          "fontSize": 20,
                                                          "fontWeight": "500",
                                                        },
                                                        Array [
                                                          null,
                                                          Object {
                                                            "textAlign": "center",
                                                          },
                                                          undefined,
                                                        ],
                                                      ]
                                                    }
                                                    styles={
                                                      Object {
                                                        "root": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": undefined,
                                                          "fontSize": 16,
                                                          "fontWeight": "400",
                                                        },
                                                      }
                                                    }
                                                    testID="header-title"
                                                  >
                                                    <Text
                                                      accessibilityTraits="header"
                                                      allowFontScaling={true}
                                                      numberOfLines={1}
                                                      onLayout={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": undefined,
                                                            "fontSize": 16,
                                                            "fontWeight": "400",
                                                          },
                                                          Array [
                                                            Object {
                                                              "color": "#fff",
                                                              "fontFamily": undefined,
                                                              "fontSize": 20,
                                                              "fontWeight": "500",
                                                            },
                                                            Array [
                                                              null,
                                                              Object {
                                                                "textAlign": "center",
                                                              },
                                                              undefined,
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                      testID="header-title"
                                                    >
                                                      <Text
                                                        accessibilityTraits="header"
                                                        allowFontScaling={true}
                                                        numberOfLines={1}
                                                        onLayout={[Function]}
                                                        style={
                                                          Array [
                                                            Object {
                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                              "fontFamily": undefined,
                                                              "fontSize": 16,
                                                              "fontWeight": "400",
                                                            },
                                                            Array [
                                                              Object {
                                                                "color": "#fff",
                                                                "fontFamily": undefined,
                                                                "fontSize": 20,
                                                                "fontWeight": "500",
                                                              },
                                                              Array [
                                                                null,
                                                                Object {
                                                                  "textAlign": "center",
                                                                },
                                                                undefined,
                                                              ],
                                                            ],
                                                          ]
                                                        }
                                                        testID="header-title"
                                                      >
                                                        Foo
                                                      </Text>
                                                    </Text>
                                                  </Component>
                                                </ThemedComponent>
                                              </Text>
                                            </HeaderTitle>
                                          </ThemedComponent>
                                        </HeaderTitle>
                                      </View>
                                    </View>
                                    <HeaderBackButton
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "marginRight": 16,
                                        }
                                      }
                                      testId="header-left"
                                      title={null}
                                    >
                                      <ThemedComponent
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "marginRight": 16,
                                          }
                                        }
                                        testId="header-left"
                                        title={null}
                                      >
                                        <HeaderBackButton
                                          defaultStyles={Object {}}
                                          pressColorAndroid="rgba(0, 0, 0, .32)"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "marginRight": 16,
                                            }
                                          }
                                          styles={
                                            Object {
                                              "androidButtonWrapper": Object {
                                                "backgroundColor": "transparent",
                                                "margin": 13,
                                              },
                                              "icon": Object {
                                                "backgroundColor": "transparent",
                                                "height": 21,
                                                "marginLeft": 9,
                                                "marginRight": 22,
                                                "marginVertical": 12,
                                                "resizeMode": "contain",
                                                "transform": Array [
                                                  Object {
                                                    "scaleX": 1,
                                                  },
                                                ],
                                                "width": 13,
                                              },
                                              "iconWithTitle": Object {
                                                "marginRight": 6,
                                              },
                                              "title": Object {
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "paddingRight": 10,
                                              },
                                              "wrapper": Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "flexDirection": "row",
                                              },
                                            }
                                          }
                                          testId="header-left"
                                          title={null}
                                          truncatedTitle="Back"
                                        >
                                          <NavigationActions>
                                            <ThemedComponent>
                                              <Component>
                                                <TouchableItem
                                                  accessibilityComponentType="button"
                                                  accessibilityLabel="Go back"
                                                  accessibilityRole="button"
                                                  accessibilityTraits="button"
                                                  accessible={true}
                                                  borderless={true}
                                                  delayPressIn={0}
                                                  onPress={[Function]}
                                                  pressColor="rgba(0, 0, 0, .32)"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginRight": 16,
                                                    }
                                                  }
                                                  testID="header-back"
                                                >
                                                  <TouchableOpacity
                                                    accessibilityComponentType="button"
                                                    accessibilityLabel="Go back"
                                                    accessibilityRole="button"
                                                    accessibilityTraits="button"
                                                    accessible={true}
                                                    activeOpacity={0.2}
                                                    borderless={true}
                                                    delayPressIn={0}
                                                    hitSlop={
                                                      Object {
                                                        "bottom": 10,
                                                        "left": 10,
                                                        "right": 10,
                                                        "top": 10,
                                                      }
                                                    }
                                                    onPress={[Function]}
                                                    pressColor="rgba(0, 0, 0, .32)"
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "flexDirection": "row",
                                                        "marginRight": 16,
                                                      }
                                                    }
                                                    testID="header-back"
                                                  >
                                                    <AnimatedComponent
                                                      accessibilityLabel="Go back"
                                                      accessibilityRole="button"
                                                      accessible={true}
                                                      hitSlop={
                                                        Object {
                                                          "bottom": 10,
                                                          "left": 10,
                                                          "right": 10,
                                                          "top": 10,
                                                        }
                                                      }
                                                      isTVSelectable={true}
                                                      onResponderGrant={[Function]}
                                                      onResponderMove={[Function]}
                                                      onResponderRelease={[Function]}
                                                      onResponderTerminate={[Function]}
                                                      onResponderTerminationRequest={[Function]}
                                                      onStartShouldSetResponder={[Function]}
                                                      style={
                                                        Array [
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                          },
                                                          Object {
                                                            "opacity": 1,
                                                          },
                                                        ]
                                                      }
                                                      testID="header-back"
                                                    >
                                                      <View
                                                        accessibilityLabel="Go back"
                                                        accessibilityRole="button"
                                                        accessible={true}
                                                        hitSlop={
                                                          Object {
                                                            "bottom": 10,
                                                            "left": 10,
                                                            "right": 10,
                                                            "top": 10,
                                                          }
                                                        }
                                                        isTVSelectable={true}
                                                        onResponderGrant={[Function]}
                                                        onResponderMove={[Function]}
                                                        onResponderRelease={[Function]}
                                                        onResponderTerminate={[Function]}
                                                        onResponderTerminationRequest={[Function]}
                                                        onStartShouldSetResponder={[Function]}
                                                        style={
                                                          Object {
                                                            "alignItems": "center",
                                                            "flexDirection": "row",
                                                            "marginRight": 16,
                                                            "opacity": 1,
                                                          }
                                                        }
                                                        testID="header-back"
                                                      >
                                                        <View
                                                          accessibilityLabel="Go back"
                                                          accessibilityRole="button"
                                                          accessible={true}
                                                          hitSlop={
                                                            Object {
                                                              "bottom": 10,
                                                              "left": 10,
                                                              "right": 10,
                                                              "top": 10,
                                                            }
                                                          }
                                                          isTVSelectable={true}
                                                          onResponderGrant={[Function]}
                                                          onResponderMove={[Function]}
                                                          onResponderRelease={[Function]}
                                                          onResponderTerminate={[Function]}
                                                          onResponderTerminationRequest={[Function]}
                                                          onStartShouldSetResponder={[Function]}
                                                          style={
                                                            Object {
                                                              "alignItems": "center",
                                                              "flexDirection": "row",
                                                              "marginRight": 16,
                                                              "opacity": 1,
                                                            }
                                                          }
                                                          testID="header-back"
                                                        >
                                                          <View
                                                            style={
                                                              Object {
                                                                "alignItems": "center",
                                                                "backgroundColor": "transparent",
                                                                "flexDirection": "row",
                                                              }
                                                            }
                                                            testID="header-back-wrapper"
                                                          >
                                                            <View
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "backgroundColor": "transparent",
                                                                  "flexDirection": "row",
                                                                }
                                                              }
                                                              testID="header-back-wrapper"
                                                            >
                                                              <Component
                                                                fadeDuration={0}
                                                                source="test-file-stub"
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "backgroundColor": "transparent",
                                                                      "height": 21,
                                                                      "marginLeft": 9,
                                                                      "marginRight": 22,
                                                                      "marginVertical": 12,
                                                                      "resizeMode": "contain",
                                                                      "transform": Array [
                                                                        Object {
                                                                          "scaleX": 1,
                                                                        },
                                                                      ],
                                                                      "width": 13,
                                                                    },
                                                                    false,
                                                                    Object {
                                                                      "tintColor": "#fff",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Image
                                                                  fadeDuration={0}
                                                                  source="test-file-stub"
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "backgroundColor": "transparent",
                                                                        "height": 21,
                                                                        "marginLeft": 9,
                                                                        "marginRight": 22,
                                                                        "marginVertical": 12,
                                                                        "resizeMode": "contain",
                                                                        "transform": Array [
                                                                          Object {
                                                                            "scaleX": 1,
                                                                          },
                                                                        ],
                                                                        "width": 13,
                                                                      },
                                                                      false,
                                                                      Object {
                                                                        "tintColor": "#fff",
                                                                      },
                                                                    ]
                                                                  }
                                                                />
                                                              </Component>
                                                            </View>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </AnimatedComponent>
                                                  </TouchableOpacity>
                                                </TouchableItem>
                                              </Component>
                                            </ThemedComponent>
                                          </NavigationActions>
                                        </HeaderBackButton>
                                      </ThemedComponent>
                                    </HeaderBackButton>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "bottom": 0,
                                            "flexDirection": "row",
                                            "marginLeft": 16,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      testID="header-right-container"
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "bottom": 0,
                                              "flexDirection": "row",
                                              "marginLeft": 16,
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                            },
                                          ]
                                        }
                                        testID="header-right-container"
                                      />
                                    </View>
                                  </RCTMaskedView>
                                </_class>
                              </MaskedViewIOS>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </_class>
                </SafeAreaView>
              </Header>
            </ThemedComponent>
          </Header>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;
